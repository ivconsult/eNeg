//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("eNegModel", "FK__User__AccountTyp__5FB337D6", "AccountType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.eNeg.CommonTest.Web.AccountType), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.CommonTest.Web.User), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__History__ActionT__5441852A", "ActionType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.eNeg.CommonTest.Web.ActionType), "History", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.CommonTest.Web.History), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__Negotiati__Appli__59FA5E80", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.eNeg.CommonTest.Web.Application), "NegotiationApplicationStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.CommonTest.Web.NegotiationApplicationStatu), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__Attacheme__Messa__5070F446", "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.eNeg.CommonTest.Web.Message), "Attachement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.CommonTest.Web.Attachement), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__Channel__Channel__5165187F", "ChannelType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.eNeg.CommonTest.Web.ChannelType), "Channel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.CommonTest.Web.Channel), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__Message__Channel__571DF1D5", "Channel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.eNeg.CommonTest.Web.Channel), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.CommonTest.Web.Message), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__Conversat__Delet__534D60F1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.eNeg.CommonTest.Web.User), "Conversation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.CommonTest.Web.Conversation), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__Conversat__Negot__52593CB8", "Negotiation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.eNeg.CommonTest.Web.Negotiation), "Conversation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.CommonTest.Web.Conversation), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__Message__Convers__5629CD9C", "Conversation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.eNeg.CommonTest.Web.Conversation), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.CommonTest.Web.Message), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__User__CountryID__628FA481", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.eNeg.CommonTest.Web.Country), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.CommonTest.Web.User), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__History__UserID__5535A963", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.eNeg.CommonTest.Web.User), "History", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.CommonTest.Web.History), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__Message__Deleted__5812160E", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.eNeg.CommonTest.Web.User), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.CommonTest.Web.Message), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__Negotiati__Negot__5AEE82B9", "Negotiation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.eNeg.CommonTest.Web.Negotiation), "NegotiationApplicationStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.CommonTest.Web.NegotiationApplicationStatu), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__Negotiati__Statu__59063A47", "NegotiationStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.eNeg.CommonTest.Web.NegotiationStatu), "Negotiation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.CommonTest.Web.Negotiation), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__Negotiati__UserI__5BE2A6F2", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.eNeg.CommonTest.Web.User), "NegotiationApplicationStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.CommonTest.Web.NegotiationApplicationStatu), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__User__LCID__619B8048", "PreferedLanguage", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.eNeg.CommonTest.Web.PreferedLanguage), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.CommonTest.Web.User), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__Profile__UserID__5CD6CB2B", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.eNeg.CommonTest.Web.User), "Profile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.CommonTest.Web.Profile), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__RoleRight__Right__5DCAEF64", "Right", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.eNeg.CommonTest.Web.Right), "RoleRight", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.CommonTest.Web.RoleRight), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__RoleRight__RoleI__5EBF139D", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.eNeg.CommonTest.Web.Role), "RoleRight", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.CommonTest.Web.RoleRight), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__UserRole__RoleID__6477ECF3", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.eNeg.CommonTest.Web.Role), "UserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.CommonTest.Web.UserRole), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__User__SecurityQu__60A75C0F", "SecurityQuestion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.eNeg.CommonTest.Web.SecurityQuestion), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.CommonTest.Web.User), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__UserRole__UserID__6383C8BA", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.eNeg.CommonTest.Web.User), "UserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.CommonTest.Web.UserRole), true)]

#endregion

namespace citPOINT.eNeg.CommonTest.Web
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class eNegEntities : ObjectContext
    {
        #region → Constructors   .
    
        /// <summary>
        /// Initializes a new eNegEntities object using the connection string found in the 'eNegEntities' section of the application configuration file.
        /// </summary>
        public eNegEntities() : base("name=eNegEntities", "eNegEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new eNegEntities object.
        /// </summary>
        public eNegEntities(string connectionString) : base(connectionString, "eNegEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new eNegEntities object.
        /// </summary>
        public eNegEntities(EntityConnection connection) : base(connection, "eNegEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountType> AccountTypes
        {
            get
            {
                if ((_AccountTypes == null))
                {
                    _AccountTypes = base.CreateObjectSet<AccountType>("AccountTypes");
                }
                return _AccountTypes;
            }
        }
        private ObjectSet<AccountType> _AccountTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActionType> ActionTypes
        {
            get
            {
                if ((_ActionTypes == null))
                {
                    _ActionTypes = base.CreateObjectSet<ActionType>("ActionTypes");
                }
                return _ActionTypes;
            }
        }
        private ObjectSet<ActionType> _ActionTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Application> Applications
        {
            get
            {
                if ((_Applications == null))
                {
                    _Applications = base.CreateObjectSet<Application>("Applications");
                }
                return _Applications;
            }
        }
        private ObjectSet<Application> _Applications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Attachement> Attachements
        {
            get
            {
                if ((_Attachements == null))
                {
                    _Attachements = base.CreateObjectSet<Attachement>("Attachements");
                }
                return _Attachements;
            }
        }
        private ObjectSet<Attachement> _Attachements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Channel> Channels
        {
            get
            {
                if ((_Channels == null))
                {
                    _Channels = base.CreateObjectSet<Channel>("Channels");
                }
                return _Channels;
            }
        }
        private ObjectSet<Channel> _Channels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChannelType> ChannelTypes
        {
            get
            {
                if ((_ChannelTypes == null))
                {
                    _ChannelTypes = base.CreateObjectSet<ChannelType>("ChannelTypes");
                }
                return _ChannelTypes;
            }
        }
        private ObjectSet<ChannelType> _ChannelTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Conversation> Conversations
        {
            get
            {
                if ((_Conversations == null))
                {
                    _Conversations = base.CreateObjectSet<Conversation>("Conversations");
                }
                return _Conversations;
            }
        }
        private ObjectSet<Conversation> _Conversations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<History> Histories
        {
            get
            {
                if ((_Histories == null))
                {
                    _Histories = base.CreateObjectSet<History>("Histories");
                }
                return _Histories;
            }
        }
        private ObjectSet<History> _Histories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Message> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Message>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Message> _Messages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Negotiation> Negotiations
        {
            get
            {
                if ((_Negotiations == null))
                {
                    _Negotiations = base.CreateObjectSet<Negotiation>("Negotiations");
                }
                return _Negotiations;
            }
        }
        private ObjectSet<Negotiation> _Negotiations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NegotiationApplicationStatu> NegotiationApplicationStatus
        {
            get
            {
                if ((_NegotiationApplicationStatus == null))
                {
                    _NegotiationApplicationStatus = base.CreateObjectSet<NegotiationApplicationStatu>("NegotiationApplicationStatus");
                }
                return _NegotiationApplicationStatus;
            }
        }
        private ObjectSet<NegotiationApplicationStatu> _NegotiationApplicationStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NegotiationStatu> NegotiationStatus
        {
            get
            {
                if ((_NegotiationStatus == null))
                {
                    _NegotiationStatus = base.CreateObjectSet<NegotiationStatu>("NegotiationStatus");
                }
                return _NegotiationStatus;
            }
        }
        private ObjectSet<NegotiationStatu> _NegotiationStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PreferedLanguage> PreferedLanguages
        {
            get
            {
                if ((_PreferedLanguages == null))
                {
                    _PreferedLanguages = base.CreateObjectSet<PreferedLanguage>("PreferedLanguages");
                }
                return _PreferedLanguages;
            }
        }
        private ObjectSet<PreferedLanguage> _PreferedLanguages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Profile> Profiles
        {
            get
            {
                if ((_Profiles == null))
                {
                    _Profiles = base.CreateObjectSet<Profile>("Profiles");
                }
                return _Profiles;
            }
        }
        private ObjectSet<Profile> _Profiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Right> Rights
        {
            get
            {
                if ((_Rights == null))
                {
                    _Rights = base.CreateObjectSet<Right>("Rights");
                }
                return _Rights;
            }
        }
        private ObjectSet<Right> _Rights;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RoleRight> RoleRights
        {
            get
            {
                if ((_RoleRights == null))
                {
                    _RoleRights = base.CreateObjectSet<RoleRight>("RoleRights");
                }
                return _RoleRights;
            }
        }
        private ObjectSet<RoleRight> _RoleRights;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SecurityQuestion> SecurityQuestions
        {
            get
            {
                if ((_SecurityQuestions == null))
                {
                    _SecurityQuestions = base.CreateObjectSet<SecurityQuestion>("SecurityQuestions");
                }
                return _SecurityQuestions;
            }
        }
        private ObjectSet<SecurityQuestion> _SecurityQuestions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserRole> UserRoles
        {
            get
            {
                if ((_UserRoles == null))
                {
                    _UserRoles = base.CreateObjectSet<UserRole>("UserRoles");
                }
                return _UserRoles;
            }
        }
        private ObjectSet<UserRole> _UserRoles;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountTypes(AccountType accountType)
        {
            base.AddObject("AccountTypes", accountType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActionTypes(ActionType actionType)
        {
            base.AddObject("ActionTypes", actionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Applications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplications(Application application)
        {
            base.AddObject("Applications", application);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Attachements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttachements(Attachement attachement)
        {
            base.AddObject("Attachements", attachement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Channels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChannels(Channel channel)
        {
            base.AddObject("Channels", channel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChannelTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChannelTypes(ChannelType channelType)
        {
            base.AddObject("ChannelTypes", channelType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Conversations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConversations(Conversation conversation)
        {
            base.AddObject("Conversations", conversation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Histories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHistories(History history)
        {
            base.AddObject("Histories", history);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Messages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Negotiations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNegotiations(Negotiation negotiation)
        {
            base.AddObject("Negotiations", negotiation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NegotiationApplicationStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNegotiationApplicationStatus(NegotiationApplicationStatu negotiationApplicationStatu)
        {
            base.AddObject("NegotiationApplicationStatus", negotiationApplicationStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NegotiationStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNegotiationStatus(NegotiationStatu negotiationStatu)
        {
            base.AddObject("NegotiationStatus", negotiationStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PreferedLanguages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPreferedLanguages(PreferedLanguage preferedLanguage)
        {
            base.AddObject("PreferedLanguages", preferedLanguage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Profiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProfiles(Profile profile)
        {
            base.AddObject("Profiles", profile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rights EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRights(Right right)
        {
            base.AddObject("Rights", right);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RoleRights EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoleRights(RoleRight roleRight)
        {
            base.AddObject("RoleRights", roleRight);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SecurityQuestions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSecurityQuestions(SecurityQuestion securityQuestion)
        {
            base.AddObject("SecurityQuestions", securityQuestion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserRoles(UserRole userRole)
        {
            base.AddObject("UserRoles", userRole);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="AccountType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountType object.
        /// </summary>
        /// <param name="accountTypeID">Initial value of the AccountTypeID property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        public static AccountType CreateAccountType(global::System.Guid accountTypeID, global::System.String typeName)
        {
            AccountType accountType = new AccountType();
            accountType.AccountTypeID = accountTypeID;
            accountType.TypeName = typeName;
            return accountType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AccountTypeID
        {
            get
            {
                return _AccountTypeID;
            }
            set
            {
                if (_AccountTypeID != value)
                {
                    OnAccountTypeIDChanging(value);
                    ReportPropertyChanging("AccountTypeID");
                    _AccountTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountTypeID");
                    OnAccountTypeIDChanged();
                }
            }
        }
        private global::System.Guid _AccountTypeID;
        partial void OnAccountTypeIDChanging(global::System.Guid value);
        partial void OnAccountTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypeDescription
        {
            get
            {
                return _TypeDescription;
            }
            set
            {
                OnTypeDescriptionChanging(value);
                ReportPropertyChanging("TypeDescription");
                _TypeDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TypeDescription");
                OnTypeDescriptionChanged();
            }
        }
        private global::System.String _TypeDescription;
        partial void OnTypeDescriptionChanging(global::System.String value);
        partial void OnTypeDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__User__AccountTyp__5FB337D6", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("eNegModel.FK__User__AccountTyp__5FB337D6", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("eNegModel.FK__User__AccountTyp__5FB337D6", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="ActionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActionType object.
        /// </summary>
        /// <param name="actionTypeID">Initial value of the ActionTypeID property.</param>
        public static ActionType CreateActionType(global::System.Guid actionTypeID)
        {
            ActionType actionType = new ActionType();
            actionType.ActionTypeID = actionTypeID;
            return actionType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ActionTypeID
        {
            get
            {
                return _ActionTypeID;
            }
            set
            {
                if (_ActionTypeID != value)
                {
                    OnActionTypeIDChanging(value);
                    ReportPropertyChanging("ActionTypeID");
                    _ActionTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActionTypeID");
                    OnActionTypeIDChanged();
                }
            }
        }
        private global::System.Guid _ActionTypeID;
        partial void OnActionTypeIDChanging(global::System.Guid value);
        partial void OnActionTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActionDescription
        {
            get
            {
                return _ActionDescription;
            }
            set
            {
                OnActionDescriptionChanging(value);
                ReportPropertyChanging("ActionDescription");
                _ActionDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ActionDescription");
                OnActionDescriptionChanged();
            }
        }
        private global::System.String _ActionDescription;
        partial void OnActionDescriptionChanging(global::System.String value);
        partial void OnActionDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__History__ActionT__5441852A", "History")]
        public EntityCollection<History> Histories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<History>("eNegModel.FK__History__ActionT__5441852A", "History");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<History>("eNegModel.FK__History__ActionT__5441852A", "History", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="Application")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Application : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Application object.
        /// </summary>
        /// <param name="applicationID">Initial value of the ApplicationID property.</param>
        /// <param name="applicationTitle">Initial value of the ApplicationTitle property.</param>
        public static Application CreateApplication(global::System.Guid applicationID, global::System.String applicationTitle)
        {
            Application application = new Application();
            application.ApplicationID = applicationID;
            application.ApplicationTitle = applicationTitle;
            return application;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationID
        {
            get
            {
                return _ApplicationID;
            }
            set
            {
                if (_ApplicationID != value)
                {
                    OnApplicationIDChanging(value);
                    ReportPropertyChanging("ApplicationID");
                    _ApplicationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationID");
                    OnApplicationIDChanged();
                }
            }
        }
        private global::System.Guid _ApplicationID;
        partial void OnApplicationIDChanging(global::System.Guid value);
        partial void OnApplicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationTitle
        {
            get
            {
                return _ApplicationTitle;
            }
            set
            {
                OnApplicationTitleChanging(value);
                ReportPropertyChanging("ApplicationTitle");
                _ApplicationTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApplicationTitle");
                OnApplicationTitleChanged();
            }
        }
        private global::System.String _ApplicationTitle;
        partial void OnApplicationTitleChanging(global::System.String value);
        partial void OnApplicationTitleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Negotiati__Appli__59FA5E80", "NegotiationApplicationStatus")]
        public EntityCollection<NegotiationApplicationStatu> NegotiationApplicationStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NegotiationApplicationStatu>("eNegModel.FK__Negotiati__Appli__59FA5E80", "NegotiationApplicationStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NegotiationApplicationStatu>("eNegModel.FK__Negotiati__Appli__59FA5E80", "NegotiationApplicationStatus", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="Attachement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Attachement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Attachement object.
        /// </summary>
        /// <param name="attachementID">Initial value of the AttachementID property.</param>
        public static Attachement CreateAttachement(global::System.Guid attachementID)
        {
            Attachement attachement = new Attachement();
            attachement.AttachementID = attachementID;
            return attachement;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AttachementID
        {
            get
            {
                return _AttachementID;
            }
            set
            {
                if (_AttachementID != value)
                {
                    OnAttachementIDChanging(value);
                    ReportPropertyChanging("AttachementID");
                    _AttachementID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AttachementID");
                    OnAttachementIDChanged();
                }
            }
        }
        private global::System.Guid _AttachementID;
        partial void OnAttachementIDChanging(global::System.Guid value);
        partial void OnAttachementIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AttachementName
        {
            get
            {
                return _AttachementName;
            }
            set
            {
                OnAttachementNameChanging(value);
                ReportPropertyChanging("AttachementName");
                _AttachementName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AttachementName");
                OnAttachementNameChanged();
            }
        }
        private global::System.String _AttachementName;
        partial void OnAttachementNameChanging(global::System.String value);
        partial void OnAttachementNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] AttachementContent
        {
            get
            {
                return StructuralObject.GetValidValue(_AttachementContent);
            }
            set
            {
                OnAttachementContentChanging(value);
                ReportPropertyChanging("AttachementContent");
                _AttachementContent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AttachementContent");
                OnAttachementContentChanged();
            }
        }
        private global::System.Byte[] _AttachementContent;
        partial void OnAttachementContentChanging(global::System.Byte[] value);
        partial void OnAttachementContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> MessageID
        {
            get
            {
                return _MessageID;
            }
            set
            {
                OnMessageIDChanging(value);
                ReportPropertyChanging("MessageID");
                _MessageID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageID");
                OnMessageIDChanged();
            }
        }
        private Nullable<global::System.Guid> _MessageID;
        partial void OnMessageIDChanging(Nullable<global::System.Guid> value);
        partial void OnMessageIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Attacheme__Messa__5070F446", "Message")]
        public Message Message
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("eNegModel.FK__Attacheme__Messa__5070F446", "Message").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("eNegModel.FK__Attacheme__Messa__5070F446", "Message").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Message> MessageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("eNegModel.FK__Attacheme__Messa__5070F446", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Message>("eNegModel.FK__Attacheme__Messa__5070F446", "Message", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="Channel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Channel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Channel object.
        /// </summary>
        /// <param name="channelID">Initial value of the ChannelID property.</param>
        /// <param name="channelName">Initial value of the ChannelName property.</param>
        public static Channel CreateChannel(global::System.Guid channelID, global::System.String channelName)
        {
            Channel channel = new Channel();
            channel.ChannelID = channelID;
            channel.ChannelName = channelName;
            return channel;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ChannelID
        {
            get
            {
                return _ChannelID;
            }
            set
            {
                if (_ChannelID != value)
                {
                    OnChannelIDChanging(value);
                    ReportPropertyChanging("ChannelID");
                    _ChannelID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChannelID");
                    OnChannelIDChanged();
                }
            }
        }
        private global::System.Guid _ChannelID;
        partial void OnChannelIDChanging(global::System.Guid value);
        partial void OnChannelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ChannelName
        {
            get
            {
                return _ChannelName;
            }
            set
            {
                OnChannelNameChanging(value);
                ReportPropertyChanging("ChannelName");
                _ChannelName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ChannelName");
                OnChannelNameChanged();
            }
        }
        private global::System.String _ChannelName;
        partial void OnChannelNameChanging(global::System.String value);
        partial void OnChannelNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ChannelTypeID
        {
            get
            {
                return _ChannelTypeID;
            }
            set
            {
                OnChannelTypeIDChanging(value);
                ReportPropertyChanging("ChannelTypeID");
                _ChannelTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChannelTypeID");
                OnChannelTypeIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ChannelTypeID;
        partial void OnChannelTypeIDChanging(Nullable<global::System.Guid> value);
        partial void OnChannelTypeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Channel__Channel__5165187F", "ChannelType")]
        public ChannelType ChannelType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChannelType>("eNegModel.FK__Channel__Channel__5165187F", "ChannelType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChannelType>("eNegModel.FK__Channel__Channel__5165187F", "ChannelType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChannelType> ChannelTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChannelType>("eNegModel.FK__Channel__Channel__5165187F", "ChannelType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChannelType>("eNegModel.FK__Channel__Channel__5165187F", "ChannelType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Message__Channel__571DF1D5", "Message")]
        public EntityCollection<Message> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("eNegModel.FK__Message__Channel__571DF1D5", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("eNegModel.FK__Message__Channel__571DF1D5", "Message", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="ChannelType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChannelType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChannelType object.
        /// </summary>
        /// <param name="channelTypeID">Initial value of the ChannelTypeID property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        public static ChannelType CreateChannelType(global::System.Guid channelTypeID, global::System.String typeName)
        {
            ChannelType channelType = new ChannelType();
            channelType.ChannelTypeID = channelTypeID;
            channelType.TypeName = typeName;
            return channelType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ChannelTypeID
        {
            get
            {
                return _ChannelTypeID;
            }
            set
            {
                if (_ChannelTypeID != value)
                {
                    OnChannelTypeIDChanging(value);
                    ReportPropertyChanging("ChannelTypeID");
                    _ChannelTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChannelTypeID");
                    OnChannelTypeIDChanged();
                }
            }
        }
        private global::System.Guid _ChannelTypeID;
        partial void OnChannelTypeIDChanging(global::System.Guid value);
        partial void OnChannelTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Channel__Channel__5165187F", "Channel")]
        public EntityCollection<Channel> Channels
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Channel>("eNegModel.FK__Channel__Channel__5165187F", "Channel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Channel>("eNegModel.FK__Channel__Channel__5165187F", "Channel", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="Conversation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Conversation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Conversation object.
        /// </summary>
        /// <param name="conversationID">Initial value of the ConversationID property.</param>
        /// <param name="conversationName">Initial value of the ConversationName property.</param>
        /// <param name="negotiationID">Initial value of the NegotiationID property.</param>
        public static Conversation CreateConversation(global::System.Guid conversationID, global::System.String conversationName, global::System.Guid negotiationID)
        {
            Conversation conversation = new Conversation();
            conversation.ConversationID = conversationID;
            conversation.ConversationName = conversationName;
            conversation.NegotiationID = negotiationID;
            return conversation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ConversationID
        {
            get
            {
                return _ConversationID;
            }
            set
            {
                if (_ConversationID != value)
                {
                    OnConversationIDChanging(value);
                    ReportPropertyChanging("ConversationID");
                    _ConversationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ConversationID");
                    OnConversationIDChanged();
                }
            }
        }
        private global::System.Guid _ConversationID;
        partial void OnConversationIDChanging(global::System.Guid value);
        partial void OnConversationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ConversationName
        {
            get
            {
                return _ConversationName;
            }
            set
            {
                OnConversationNameChanging(value);
                ReportPropertyChanging("ConversationName");
                _ConversationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ConversationName");
                OnConversationNameChanged();
            }
        }
        private global::System.String _ConversationName;
        partial void OnConversationNameChanging(global::System.String value);
        partial void OnConversationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid NegotiationID
        {
            get
            {
                return _NegotiationID;
            }
            set
            {
                OnNegotiationIDChanging(value);
                ReportPropertyChanging("NegotiationID");
                _NegotiationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NegotiationID");
                OnNegotiationIDChanged();
            }
        }
        private global::System.Guid _NegotiationID;
        partial void OnNegotiationIDChanging(global::System.Guid value);
        partial void OnNegotiationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _DeletedBy;
        partial void OnDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Conversat__Delet__534D60F1", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__Conversat__Delet__534D60F1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__Conversat__Delet__534D60F1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__Conversat__Delet__534D60F1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("eNegModel.FK__Conversat__Delet__534D60F1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Conversat__Negot__52593CB8", "Negotiation")]
        public Negotiation Negotiation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Negotiation>("eNegModel.FK__Conversat__Negot__52593CB8", "Negotiation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Negotiation>("eNegModel.FK__Conversat__Negot__52593CB8", "Negotiation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Negotiation> NegotiationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Negotiation>("eNegModel.FK__Conversat__Negot__52593CB8", "Negotiation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Negotiation>("eNegModel.FK__Conversat__Negot__52593CB8", "Negotiation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Message__Convers__5629CD9C", "Message")]
        public EntityCollection<Message> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("eNegModel.FK__Message__Convers__5629CD9C", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("eNegModel.FK__Message__Convers__5629CD9C", "Message", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        public static Country CreateCountry(global::System.Guid countryID)
        {
            Country country = new Country();
            country.CountryID = countryID;
            return country;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Guid _CountryID;
        partial void OnCountryIDChanging(global::System.Guid value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__User__CountryID__628FA481", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("eNegModel.FK__User__CountryID__628FA481", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("eNegModel.FK__User__CountryID__628FA481", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="History")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class History : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new History object.
        /// </summary>
        /// <param name="historyID">Initial value of the HistoryID property.</param>
        /// <param name="actionTypeID">Initial value of the ActionTypeID property.</param>
        /// <param name="actionDate">Initial value of the ActionDate property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static History CreateHistory(global::System.Guid historyID, global::System.Guid actionTypeID, global::System.DateTime actionDate, global::System.Guid userID)
        {
            History history = new History();
            history.HistoryID = historyID;
            history.ActionTypeID = actionTypeID;
            history.ActionDate = actionDate;
            history.UserID = userID;
            return history;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid HistoryID
        {
            get
            {
                return _HistoryID;
            }
            set
            {
                if (_HistoryID != value)
                {
                    OnHistoryIDChanging(value);
                    ReportPropertyChanging("HistoryID");
                    _HistoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HistoryID");
                    OnHistoryIDChanged();
                }
            }
        }
        private global::System.Guid _HistoryID;
        partial void OnHistoryIDChanging(global::System.Guid value);
        partial void OnHistoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OldValue
        {
            get
            {
                return _OldValue;
            }
            set
            {
                OnOldValueChanging(value);
                ReportPropertyChanging("OldValue");
                _OldValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OldValue");
                OnOldValueChanged();
            }
        }
        private global::System.String _OldValue;
        partial void OnOldValueChanging(global::System.String value);
        partial void OnOldValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NewValue
        {
            get
            {
                return _NewValue;
            }
            set
            {
                OnNewValueChanging(value);
                ReportPropertyChanging("NewValue");
                _NewValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NewValue");
                OnNewValueChanged();
            }
        }
        private global::System.String _NewValue;
        partial void OnNewValueChanging(global::System.String value);
        partial void OnNewValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TableName
        {
            get
            {
                return _TableName;
            }
            set
            {
                OnTableNameChanging(value);
                ReportPropertyChanging("TableName");
                _TableName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TableName");
                OnTableNameChanged();
            }
        }
        private global::System.String _TableName;
        partial void OnTableNameChanging(global::System.String value);
        partial void OnTableNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ActionTypeID
        {
            get
            {
                return _ActionTypeID;
            }
            set
            {
                OnActionTypeIDChanging(value);
                ReportPropertyChanging("ActionTypeID");
                _ActionTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActionTypeID");
                OnActionTypeIDChanged();
            }
        }
        private global::System.Guid _ActionTypeID;
        partial void OnActionTypeIDChanging(global::System.Guid value);
        partial void OnActionTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ActionDate
        {
            get
            {
                return _ActionDate;
            }
            set
            {
                OnActionDateChanging(value);
                ReportPropertyChanging("ActionDate");
                _ActionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActionDate");
                OnActionDateChanged();
            }
        }
        private global::System.DateTime _ActionDate;
        partial void OnActionDateChanging(global::System.DateTime value);
        partial void OnActionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__History__ActionT__5441852A", "ActionType")]
        public ActionType ActionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionType>("eNegModel.FK__History__ActionT__5441852A", "ActionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionType>("eNegModel.FK__History__ActionT__5441852A", "ActionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ActionType> ActionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionType>("eNegModel.FK__History__ActionT__5441852A", "ActionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ActionType>("eNegModel.FK__History__ActionT__5441852A", "ActionType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__History__UserID__5535A963", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__History__UserID__5535A963", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__History__UserID__5535A963", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__History__UserID__5535A963", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("eNegModel.FK__History__UserID__5535A963", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Message object.
        /// </summary>
        /// <param name="messageID">Initial value of the MessageID property.</param>
        /// <param name="messageContent">Initial value of the MessageContent property.</param>
        /// <param name="messageSender">Initial value of the MessageSender property.</param>
        /// <param name="messageReceiver">Initial value of the MessageReceiver property.</param>
        /// <param name="channelID">Initial value of the ChannelID property.</param>
        public static Message CreateMessage(global::System.Guid messageID, global::System.String messageContent, global::System.String messageSender, global::System.String messageReceiver, global::System.Guid channelID)
        {
            Message message = new Message();
            message.MessageID = messageID;
            message.MessageContent = messageContent;
            message.MessageSender = messageSender;
            message.MessageReceiver = messageReceiver;
            message.ChannelID = channelID;
            return message;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MessageID
        {
            get
            {
                return _MessageID;
            }
            set
            {
                if (_MessageID != value)
                {
                    OnMessageIDChanging(value);
                    ReportPropertyChanging("MessageID");
                    _MessageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageID");
                    OnMessageIDChanged();
                }
            }
        }
        private global::System.Guid _MessageID;
        partial void OnMessageIDChanging(global::System.Guid value);
        partial void OnMessageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ConversationID
        {
            get
            {
                return _ConversationID;
            }
            set
            {
                OnConversationIDChanging(value);
                ReportPropertyChanging("ConversationID");
                _ConversationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConversationID");
                OnConversationIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ConversationID;
        partial void OnConversationIDChanging(Nullable<global::System.Guid> value);
        partial void OnConversationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MessageContent
        {
            get
            {
                return _MessageContent;
            }
            set
            {
                OnMessageContentChanging(value);
                ReportPropertyChanging("MessageContent");
                _MessageContent = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MessageContent");
                OnMessageContentChanged();
            }
        }
        private global::System.String _MessageContent;
        partial void OnMessageContentChanging(global::System.String value);
        partial void OnMessageContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MessageSubject
        {
            get
            {
                return _MessageSubject;
            }
            set
            {
                OnMessageSubjectChanging(value);
                ReportPropertyChanging("MessageSubject");
                _MessageSubject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MessageSubject");
                OnMessageSubjectChanged();
            }
        }
        private global::System.String _MessageSubject;
        partial void OnMessageSubjectChanging(global::System.String value);
        partial void OnMessageSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MessageSender
        {
            get
            {
                return _MessageSender;
            }
            set
            {
                OnMessageSenderChanging(value);
                ReportPropertyChanging("MessageSender");
                _MessageSender = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MessageSender");
                OnMessageSenderChanged();
            }
        }
        private global::System.String _MessageSender;
        partial void OnMessageSenderChanging(global::System.String value);
        partial void OnMessageSenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MessageReceiver
        {
            get
            {
                return _MessageReceiver;
            }
            set
            {
                OnMessageReceiverChanging(value);
                ReportPropertyChanging("MessageReceiver");
                _MessageReceiver = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MessageReceiver");
                OnMessageReceiverChanged();
            }
        }
        private global::System.String _MessageReceiver;
        partial void OnMessageReceiverChanging(global::System.String value);
        partial void OnMessageReceiverChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MessageDate
        {
            get
            {
                return _MessageDate;
            }
            set
            {
                OnMessageDateChanging(value);
                ReportPropertyChanging("MessageDate");
                _MessageDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageDate");
                OnMessageDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _MessageDate;
        partial void OnMessageDateChanging(Nullable<global::System.DateTime> value);
        partial void OnMessageDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ChannelID
        {
            get
            {
                return _ChannelID;
            }
            set
            {
                OnChannelIDChanging(value);
                ReportPropertyChanging("ChannelID");
                _ChannelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChannelID");
                OnChannelIDChanged();
            }
        }
        private global::System.Guid _ChannelID;
        partial void OnChannelIDChanging(global::System.Guid value);
        partial void OnChannelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _DeletedBy;
        partial void OnDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Attacheme__Messa__5070F446", "Attachement")]
        public EntityCollection<Attachement> Attachements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Attachement>("eNegModel.FK__Attacheme__Messa__5070F446", "Attachement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Attachement>("eNegModel.FK__Attacheme__Messa__5070F446", "Attachement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Message__Channel__571DF1D5", "Channel")]
        public Channel Channel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Channel>("eNegModel.FK__Message__Channel__571DF1D5", "Channel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Channel>("eNegModel.FK__Message__Channel__571DF1D5", "Channel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Channel> ChannelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Channel>("eNegModel.FK__Message__Channel__571DF1D5", "Channel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Channel>("eNegModel.FK__Message__Channel__571DF1D5", "Channel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Message__Convers__5629CD9C", "Conversation")]
        public Conversation Conversation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conversation>("eNegModel.FK__Message__Convers__5629CD9C", "Conversation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conversation>("eNegModel.FK__Message__Convers__5629CD9C", "Conversation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Conversation> ConversationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conversation>("eNegModel.FK__Message__Convers__5629CD9C", "Conversation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Conversation>("eNegModel.FK__Message__Convers__5629CD9C", "Conversation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Message__Deleted__5812160E", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__Message__Deleted__5812160E", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__Message__Deleted__5812160E", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__Message__Deleted__5812160E", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("eNegModel.FK__Message__Deleted__5812160E", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="Negotiation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Negotiation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Negotiation object.
        /// </summary>
        /// <param name="negotiationID">Initial value of the NegotiationID property.</param>
        /// <param name="negotiationName">Initial value of the NegotiationName property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static Negotiation CreateNegotiation(global::System.Guid negotiationID, global::System.String negotiationName, global::System.DateTime createdDate, global::System.Guid userID)
        {
            Negotiation negotiation = new Negotiation();
            negotiation.NegotiationID = negotiationID;
            negotiation.NegotiationName = negotiationName;
            negotiation.CreatedDate = createdDate;
            negotiation.UserID = userID;
            return negotiation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid NegotiationID
        {
            get
            {
                return _NegotiationID;
            }
            set
            {
                if (_NegotiationID != value)
                {
                    OnNegotiationIDChanging(value);
                    ReportPropertyChanging("NegotiationID");
                    _NegotiationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NegotiationID");
                    OnNegotiationIDChanged();
                }
            }
        }
        private global::System.Guid _NegotiationID;
        partial void OnNegotiationIDChanging(global::System.Guid value);
        partial void OnNegotiationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NegotiationName
        {
            get
            {
                return _NegotiationName;
            }
            set
            {
                OnNegotiationNameChanging(value);
                ReportPropertyChanging("NegotiationName");
                _NegotiationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NegotiationName");
                OnNegotiationNameChanged();
            }
        }
        private global::System.String _NegotiationName;
        partial void OnNegotiationNameChanging(global::System.String value);
        partial void OnNegotiationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                OnStatusIDChanging(value);
                ReportPropertyChanging("StatusID");
                _StatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusID");
                OnStatusIDChanged();
            }
        }
        private Nullable<global::System.Guid> _StatusID;
        partial void OnStatusIDChanging(Nullable<global::System.Guid> value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedDate
        {
            get
            {
                return _DeletedDate;
            }
            set
            {
                OnDeletedDateChanging(value);
                ReportPropertyChanging("DeletedDate");
                _DeletedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedDate");
                OnDeletedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedDate;
        partial void OnDeletedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Conversat__Negot__52593CB8", "Conversation")]
        public EntityCollection<Conversation> Conversations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Conversation>("eNegModel.FK__Conversat__Negot__52593CB8", "Conversation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Conversation>("eNegModel.FK__Conversat__Negot__52593CB8", "Conversation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Negotiati__Negot__5AEE82B9", "NegotiationApplicationStatus")]
        public EntityCollection<NegotiationApplicationStatu> NegotiationApplicationStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NegotiationApplicationStatu>("eNegModel.FK__Negotiati__Negot__5AEE82B9", "NegotiationApplicationStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NegotiationApplicationStatu>("eNegModel.FK__Negotiati__Negot__5AEE82B9", "NegotiationApplicationStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Negotiati__Statu__59063A47", "NegotiationStatus")]
        public NegotiationStatu NegotiationStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NegotiationStatu>("eNegModel.FK__Negotiati__Statu__59063A47", "NegotiationStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NegotiationStatu>("eNegModel.FK__Negotiati__Statu__59063A47", "NegotiationStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NegotiationStatu> NegotiationStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NegotiationStatu>("eNegModel.FK__Negotiati__Statu__59063A47", "NegotiationStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NegotiationStatu>("eNegModel.FK__Negotiati__Statu__59063A47", "NegotiationStatus", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="NegotiationApplicationStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NegotiationApplicationStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NegotiationApplicationStatu object.
        /// </summary>
        /// <param name="negotiationApplicationStatusID">Initial value of the NegotiationApplicationStatusID property.</param>
        /// <param name="applicationID">Initial value of the ApplicationID property.</param>
        /// <param name="negotiationID">Initial value of the NegotiationID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static NegotiationApplicationStatu CreateNegotiationApplicationStatu(global::System.Guid negotiationApplicationStatusID, global::System.Guid applicationID, global::System.Guid negotiationID, global::System.Guid userID, global::System.Boolean active)
        {
            NegotiationApplicationStatu negotiationApplicationStatu = new NegotiationApplicationStatu();
            negotiationApplicationStatu.NegotiationApplicationStatusID = negotiationApplicationStatusID;
            negotiationApplicationStatu.ApplicationID = applicationID;
            negotiationApplicationStatu.NegotiationID = negotiationID;
            negotiationApplicationStatu.UserID = userID;
            negotiationApplicationStatu.Active = active;
            return negotiationApplicationStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid NegotiationApplicationStatusID
        {
            get
            {
                return _NegotiationApplicationStatusID;
            }
            set
            {
                if (_NegotiationApplicationStatusID != value)
                {
                    OnNegotiationApplicationStatusIDChanging(value);
                    ReportPropertyChanging("NegotiationApplicationStatusID");
                    _NegotiationApplicationStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NegotiationApplicationStatusID");
                    OnNegotiationApplicationStatusIDChanged();
                }
            }
        }
        private global::System.Guid _NegotiationApplicationStatusID;
        partial void OnNegotiationApplicationStatusIDChanging(global::System.Guid value);
        partial void OnNegotiationApplicationStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationID
        {
            get
            {
                return _ApplicationID;
            }
            set
            {
                OnApplicationIDChanging(value);
                ReportPropertyChanging("ApplicationID");
                _ApplicationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationID");
                OnApplicationIDChanged();
            }
        }
        private global::System.Guid _ApplicationID;
        partial void OnApplicationIDChanging(global::System.Guid value);
        partial void OnApplicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid NegotiationID
        {
            get
            {
                return _NegotiationID;
            }
            set
            {
                OnNegotiationIDChanging(value);
                ReportPropertyChanging("NegotiationID");
                _NegotiationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NegotiationID");
                OnNegotiationIDChanged();
            }
        }
        private global::System.Guid _NegotiationID;
        partial void OnNegotiationIDChanging(global::System.Guid value);
        partial void OnNegotiationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Negotiati__Appli__59FA5E80", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("eNegModel.FK__Negotiati__Appli__59FA5E80", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("eNegModel.FK__Negotiati__Appli__59FA5E80", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("eNegModel.FK__Negotiati__Appli__59FA5E80", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("eNegModel.FK__Negotiati__Appli__59FA5E80", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Negotiati__Negot__5AEE82B9", "Negotiation")]
        public Negotiation Negotiation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Negotiation>("eNegModel.FK__Negotiati__Negot__5AEE82B9", "Negotiation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Negotiation>("eNegModel.FK__Negotiati__Negot__5AEE82B9", "Negotiation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Negotiation> NegotiationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Negotiation>("eNegModel.FK__Negotiati__Negot__5AEE82B9", "Negotiation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Negotiation>("eNegModel.FK__Negotiati__Negot__5AEE82B9", "Negotiation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Negotiati__UserI__5BE2A6F2", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__Negotiati__UserI__5BE2A6F2", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__Negotiati__UserI__5BE2A6F2", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__Negotiati__UserI__5BE2A6F2", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("eNegModel.FK__Negotiati__UserI__5BE2A6F2", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="NegotiationStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NegotiationStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NegotiationStatu object.
        /// </summary>
        /// <param name="statusID">Initial value of the StatusID property.</param>
        /// <param name="statusDescription">Initial value of the StatusDescription property.</param>
        public static NegotiationStatu CreateNegotiationStatu(global::System.Guid statusID, global::System.String statusDescription)
        {
            NegotiationStatu negotiationStatu = new NegotiationStatu();
            negotiationStatu.StatusID = statusID;
            negotiationStatu.StatusDescription = statusDescription;
            return negotiationStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                if (_StatusID != value)
                {
                    OnStatusIDChanging(value);
                    ReportPropertyChanging("StatusID");
                    _StatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StatusID");
                    OnStatusIDChanged();
                }
            }
        }
        private global::System.Guid _StatusID;
        partial void OnStatusIDChanging(global::System.Guid value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StatusDescription
        {
            get
            {
                return _StatusDescription;
            }
            set
            {
                OnStatusDescriptionChanging(value);
                ReportPropertyChanging("StatusDescription");
                _StatusDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StatusDescription");
                OnStatusDescriptionChanged();
            }
        }
        private global::System.String _StatusDescription;
        partial void OnStatusDescriptionChanging(global::System.String value);
        partial void OnStatusDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Negotiati__Statu__59063A47", "Negotiation")]
        public EntityCollection<Negotiation> Negotiations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Negotiation>("eNegModel.FK__Negotiati__Statu__59063A47", "Negotiation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Negotiation>("eNegModel.FK__Negotiati__Statu__59063A47", "Negotiation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="PreferedLanguage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PreferedLanguage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PreferedLanguage object.
        /// </summary>
        /// <param name="lCID">Initial value of the LCID property.</param>
        public static PreferedLanguage CreatePreferedLanguage(global::System.Int32 lCID)
        {
            PreferedLanguage preferedLanguage = new PreferedLanguage();
            preferedLanguage.LCID = lCID;
            return preferedLanguage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LCID
        {
            get
            {
                return _LCID;
            }
            set
            {
                if (_LCID != value)
                {
                    OnLCIDChanging(value);
                    ReportPropertyChanging("LCID");
                    _LCID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LCID");
                    OnLCIDChanged();
                }
            }
        }
        private global::System.Int32 _LCID;
        partial void OnLCIDChanging(global::System.Int32 value);
        partial void OnLCIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreferedLanguage1
        {
            get
            {
                return _PreferedLanguage1;
            }
            set
            {
                OnPreferedLanguage1Changing(value);
                ReportPropertyChanging("PreferedLanguage1");
                _PreferedLanguage1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PreferedLanguage1");
                OnPreferedLanguage1Changed();
            }
        }
        private global::System.String _PreferedLanguage1;
        partial void OnPreferedLanguage1Changing(global::System.String value);
        partial void OnPreferedLanguage1Changed();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__User__LCID__619B8048", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("eNegModel.FK__User__LCID__619B8048", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("eNegModel.FK__User__LCID__619B8048", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="Profile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Profile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Profile object.
        /// </summary>
        /// <param name="profileID">Initial value of the ProfileID property.</param>
        /// <param name="currentTheme">Initial value of the CurrentTheme property.</param>
        public static Profile CreateProfile(global::System.Guid profileID, global::System.String currentTheme)
        {
            Profile profile = new Profile();
            profile.ProfileID = profileID;
            profile.CurrentTheme = currentTheme;
            return profile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ProfileID
        {
            get
            {
                return _ProfileID;
            }
            set
            {
                if (_ProfileID != value)
                {
                    OnProfileIDChanging(value);
                    ReportPropertyChanging("ProfileID");
                    _ProfileID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProfileID");
                    OnProfileIDChanged();
                }
            }
        }
        private global::System.Guid _ProfileID;
        partial void OnProfileIDChanging(global::System.Guid value);
        partial void OnProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrentTheme
        {
            get
            {
                return _CurrentTheme;
            }
            set
            {
                OnCurrentThemeChanging(value);
                ReportPropertyChanging("CurrentTheme");
                _CurrentTheme = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CurrentTheme");
                OnCurrentThemeChanged();
            }
        }
        private global::System.String _CurrentTheme;
        partial void OnCurrentThemeChanging(global::System.String value);
        partial void OnCurrentThemeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Guid> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Guid> value);
        partial void OnUserIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Profile__UserID__5CD6CB2B", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__Profile__UserID__5CD6CB2B", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__Profile__UserID__5CD6CB2B", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__Profile__UserID__5CD6CB2B", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("eNegModel.FK__Profile__UserID__5CD6CB2B", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="Right")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Right : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Right object.
        /// </summary>
        /// <param name="rightID">Initial value of the RightID property.</param>
        public static Right CreateRight(global::System.Guid rightID)
        {
            Right right = new Right();
            right.RightID = rightID;
            return right;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RightID
        {
            get
            {
                return _RightID;
            }
            set
            {
                if (_RightID != value)
                {
                    OnRightIDChanging(value);
                    ReportPropertyChanging("RightID");
                    _RightID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RightID");
                    OnRightIDChanged();
                }
            }
        }
        private global::System.Guid _RightID;
        partial void OnRightIDChanging(global::System.Guid value);
        partial void OnRightIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RightName
        {
            get
            {
                return _RightName;
            }
            set
            {
                OnRightNameChanging(value);
                ReportPropertyChanging("RightName");
                _RightName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RightName");
                OnRightNameChanged();
            }
        }
        private global::System.String _RightName;
        partial void OnRightNameChanging(global::System.String value);
        partial void OnRightNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RightDescription
        {
            get
            {
                return _RightDescription;
            }
            set
            {
                OnRightDescriptionChanging(value);
                ReportPropertyChanging("RightDescription");
                _RightDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RightDescription");
                OnRightDescriptionChanged();
            }
        }
        private global::System.String _RightDescription;
        partial void OnRightDescriptionChanging(global::System.String value);
        partial void OnRightDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__RoleRight__Right__5DCAEF64", "RoleRight")]
        public EntityCollection<RoleRight> RoleRights
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoleRight>("eNegModel.FK__RoleRight__Right__5DCAEF64", "RoleRight");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoleRight>("eNegModel.FK__RoleRight__Right__5DCAEF64", "RoleRight", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="roleDescription">Initial value of the RoleDescription property.</param>
        public static Role CreateRole(global::System.Guid roleID, global::System.String roleName, global::System.String roleDescription)
        {
            Role role = new Role();
            role.RoleID = roleID;
            role.RoleName = roleName;
            role.RoleDescription = roleDescription;
            return role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Guid _RoleID;
        partial void OnRoleIDChanging(global::System.Guid value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleDescription
        {
            get
            {
                return _RoleDescription;
            }
            set
            {
                OnRoleDescriptionChanging(value);
                ReportPropertyChanging("RoleDescription");
                _RoleDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleDescription");
                OnRoleDescriptionChanged();
            }
        }
        private global::System.String _RoleDescription;
        partial void OnRoleDescriptionChanging(global::System.String value);
        partial void OnRoleDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__RoleRight__RoleI__5EBF139D", "RoleRight")]
        public EntityCollection<RoleRight> RoleRights
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoleRight>("eNegModel.FK__RoleRight__RoleI__5EBF139D", "RoleRight");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoleRight>("eNegModel.FK__RoleRight__RoleI__5EBF139D", "RoleRight", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__UserRole__RoleID__6477ECF3", "UserRole")]
        public EntityCollection<UserRole> UserRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRole>("eNegModel.FK__UserRole__RoleID__6477ECF3", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRole>("eNegModel.FK__UserRole__RoleID__6477ECF3", "UserRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="RoleRight")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RoleRight : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RoleRight object.
        /// </summary>
        /// <param name="roleRightID">Initial value of the RoleRightID property.</param>
        public static RoleRight CreateRoleRight(global::System.Guid roleRightID)
        {
            RoleRight roleRight = new RoleRight();
            roleRight.RoleRightID = roleRightID;
            return roleRight;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleRightID
        {
            get
            {
                return _RoleRightID;
            }
            set
            {
                if (_RoleRightID != value)
                {
                    OnRoleRightIDChanging(value);
                    ReportPropertyChanging("RoleRightID");
                    _RoleRightID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleRightID");
                    OnRoleRightIDChanged();
                }
            }
        }
        private global::System.Guid _RoleRightID;
        partial void OnRoleRightIDChanging(global::System.Guid value);
        partial void OnRoleRightIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> RightID
        {
            get
            {
                return _RightID;
            }
            set
            {
                OnRightIDChanging(value);
                ReportPropertyChanging("RightID");
                _RightID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RightID");
                OnRightIDChanged();
            }
        }
        private Nullable<global::System.Guid> _RightID;
        partial void OnRightIDChanging(Nullable<global::System.Guid> value);
        partial void OnRightIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private Nullable<global::System.Guid> _RoleID;
        partial void OnRoleIDChanging(Nullable<global::System.Guid> value);
        partial void OnRoleIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__RoleRight__Right__5DCAEF64", "Right")]
        public Right Right
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Right>("eNegModel.FK__RoleRight__Right__5DCAEF64", "Right").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Right>("eNegModel.FK__RoleRight__Right__5DCAEF64", "Right").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Right> RightReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Right>("eNegModel.FK__RoleRight__Right__5DCAEF64", "Right");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Right>("eNegModel.FK__RoleRight__Right__5DCAEF64", "Right", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__RoleRight__RoleI__5EBF139D", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("eNegModel.FK__RoleRight__RoleI__5EBF139D", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("eNegModel.FK__RoleRight__RoleI__5EBF139D", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("eNegModel.FK__RoleRight__RoleI__5EBF139D", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("eNegModel.FK__RoleRight__RoleI__5EBF139D", "Role", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="SecurityQuestion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SecurityQuestion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SecurityQuestion object.
        /// </summary>
        /// <param name="securityQuestionID">Initial value of the SecurityQuestionID property.</param>
        /// <param name="question">Initial value of the Question property.</param>
        public static SecurityQuestion CreateSecurityQuestion(global::System.Guid securityQuestionID, global::System.String question)
        {
            SecurityQuestion securityQuestion = new SecurityQuestion();
            securityQuestion.SecurityQuestionID = securityQuestionID;
            securityQuestion.Question = question;
            return securityQuestion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SecurityQuestionID
        {
            get
            {
                return _SecurityQuestionID;
            }
            set
            {
                if (_SecurityQuestionID != value)
                {
                    OnSecurityQuestionIDChanging(value);
                    ReportPropertyChanging("SecurityQuestionID");
                    _SecurityQuestionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SecurityQuestionID");
                    OnSecurityQuestionIDChanged();
                }
            }
        }
        private global::System.Guid _SecurityQuestionID;
        partial void OnSecurityQuestionIDChanging(global::System.Guid value);
        partial void OnSecurityQuestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Question
        {
            get
            {
                return _Question;
            }
            set
            {
                OnQuestionChanging(value);
                ReportPropertyChanging("Question");
                _Question = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Question");
                OnQuestionChanged();
            }
        }
        private global::System.String _Question;
        partial void OnQuestionChanging(global::System.String value);
        partial void OnQuestionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__User__SecurityQu__60A75C0F", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("eNegModel.FK__User__SecurityQu__60A75C0F", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("eNegModel.FK__User__SecurityQu__60A75C0F", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="emailAddress">Initial value of the EmailAddress property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="locked">Initial value of the Locked property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="accountTypeID">Initial value of the AccountTypeID property.</param>
        /// <param name="iPAddress">Initial value of the IPAddress property.</param>
        /// <param name="securityQuestionID">Initial value of the SecurityQuestionID property.</param>
        /// <param name="securityAnswer">Initial value of the SecurityAnswer property.</param>
        /// <param name="online">Initial value of the Online property.</param>
        /// <param name="disabled">Initial value of the Disabled property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="lCID">Initial value of the LCID property.</param>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        public static User CreateUser(global::System.Guid userID, global::System.String emailAddress, global::System.String password, global::System.Boolean locked, global::System.DateTime createDate, global::System.Guid accountTypeID, global::System.String iPAddress, global::System.Guid securityQuestionID, global::System.String securityAnswer, global::System.Boolean online, global::System.Boolean disabled, global::System.String firstName, global::System.String lastName, global::System.Int32 lCID, global::System.Guid countryID)
        {
            User user = new User();
            user.UserID = userID;
            user.EmailAddress = emailAddress;
            user.Password = password;
            user.Locked = locked;
            user.CreateDate = createDate;
            user.AccountTypeID = accountTypeID;
            user.IPAddress = iPAddress;
            user.SecurityQuestionID = securityQuestionID;
            user.SecurityAnswer = securityAnswer;
            user.Online = online;
            user.Disabled = disabled;
            user.FirstName = firstName;
            user.LastName = lastName;
            user.LCID = lCID;
            user.CountryID = countryID;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Locked
        {
            get
            {
                return _Locked;
            }
            set
            {
                OnLockedChanging(value);
                ReportPropertyChanging("Locked");
                _Locked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Locked");
                OnLockedChanged();
            }
        }
        private global::System.Boolean _Locked;
        partial void OnLockedChanging(global::System.Boolean value);
        partial void OnLockedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LockedDate
        {
            get
            {
                return _LockedDate;
            }
            set
            {
                OnLockedDateChanging(value);
                ReportPropertyChanging("LockedDate");
                _LockedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LockedDate");
                OnLockedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LockedDate;
        partial void OnLockedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLockedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastLoginDate;
        partial void OnLastLoginDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AccountTypeID
        {
            get
            {
                return _AccountTypeID;
            }
            set
            {
                OnAccountTypeIDChanging(value);
                ReportPropertyChanging("AccountTypeID");
                _AccountTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountTypeID");
                OnAccountTypeIDChanged();
            }
        }
        private global::System.Guid _AccountTypeID;
        partial void OnAccountTypeIDChanging(global::System.Guid value);
        partial void OnAccountTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IPAddress
        {
            get
            {
                return _IPAddress;
            }
            set
            {
                OnIPAddressChanging(value);
                ReportPropertyChanging("IPAddress");
                _IPAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IPAddress");
                OnIPAddressChanged();
            }
        }
        private global::System.String _IPAddress;
        partial void OnIPAddressChanging(global::System.String value);
        partial void OnIPAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SecurityQuestionID
        {
            get
            {
                return _SecurityQuestionID;
            }
            set
            {
                OnSecurityQuestionIDChanging(value);
                ReportPropertyChanging("SecurityQuestionID");
                _SecurityQuestionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityQuestionID");
                OnSecurityQuestionIDChanged();
            }
        }
        private global::System.Guid _SecurityQuestionID;
        partial void OnSecurityQuestionIDChanging(global::System.Guid value);
        partial void OnSecurityQuestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityAnswer
        {
            get
            {
                return _SecurityAnswer;
            }
            set
            {
                OnSecurityAnswerChanging(value);
                ReportPropertyChanging("SecurityAnswer");
                _SecurityAnswer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecurityAnswer");
                OnSecurityAnswerChanged();
            }
        }
        private global::System.String _SecurityAnswer;
        partial void OnSecurityAnswerChanging(global::System.String value);
        partial void OnSecurityAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Online
        {
            get
            {
                return _Online;
            }
            set
            {
                OnOnlineChanging(value);
                ReportPropertyChanging("Online");
                _Online = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Online");
                OnOnlineChanged();
            }
        }
        private global::System.Boolean _Online;
        partial void OnOnlineChanging(global::System.Boolean value);
        partial void OnOnlineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Disabled
        {
            get
            {
                return _Disabled;
            }
            set
            {
                OnDisabledChanging(value);
                ReportPropertyChanging("Disabled");
                _Disabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Disabled");
                OnDisabledChanged();
            }
        }
        private global::System.Boolean _Disabled;
        partial void OnDisabledChanging(global::System.Boolean value);
        partial void OnDisabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LCID
        {
            get
            {
                return _LCID;
            }
            set
            {
                OnLCIDChanging(value);
                ReportPropertyChanging("LCID");
                _LCID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LCID");
                OnLCIDChanged();
            }
        }
        private global::System.Int32 _LCID;
        partial void OnLCIDChanging(global::System.Int32 value);
        partial void OnLCIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Guid _CountryID;
        partial void OnCountryIDChanging(global::System.Guid value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mobile
        {
            get
            {
                return _Mobile;
            }
            set
            {
                OnMobileChanging(value);
                ReportPropertyChanging("Mobile");
                _Mobile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Mobile");
                OnMobileChanged();
            }
        }
        private global::System.String _Mobile;
        partial void OnMobileChanging(global::System.String value);
        partial void OnMobileChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__User__AccountTyp__5FB337D6", "AccountType")]
        public AccountType AccountType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountType>("eNegModel.FK__User__AccountTyp__5FB337D6", "AccountType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountType>("eNegModel.FK__User__AccountTyp__5FB337D6", "AccountType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccountType> AccountTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountType>("eNegModel.FK__User__AccountTyp__5FB337D6", "AccountType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccountType>("eNegModel.FK__User__AccountTyp__5FB337D6", "AccountType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Conversat__Delet__534D60F1", "Conversation")]
        public EntityCollection<Conversation> Conversations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Conversation>("eNegModel.FK__Conversat__Delet__534D60F1", "Conversation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Conversation>("eNegModel.FK__Conversat__Delet__534D60F1", "Conversation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__User__CountryID__628FA481", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("eNegModel.FK__User__CountryID__628FA481", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("eNegModel.FK__User__CountryID__628FA481", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("eNegModel.FK__User__CountryID__628FA481", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("eNegModel.FK__User__CountryID__628FA481", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__History__UserID__5535A963", "History")]
        public EntityCollection<History> Histories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<History>("eNegModel.FK__History__UserID__5535A963", "History");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<History>("eNegModel.FK__History__UserID__5535A963", "History", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Message__Deleted__5812160E", "Message")]
        public EntityCollection<Message> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("eNegModel.FK__Message__Deleted__5812160E", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("eNegModel.FK__Message__Deleted__5812160E", "Message", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Negotiati__UserI__5BE2A6F2", "NegotiationApplicationStatus")]
        public EntityCollection<NegotiationApplicationStatu> NegotiationApplicationStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NegotiationApplicationStatu>("eNegModel.FK__Negotiati__UserI__5BE2A6F2", "NegotiationApplicationStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NegotiationApplicationStatu>("eNegModel.FK__Negotiati__UserI__5BE2A6F2", "NegotiationApplicationStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__User__LCID__619B8048", "PreferedLanguage")]
        public PreferedLanguage PreferedLanguage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PreferedLanguage>("eNegModel.FK__User__LCID__619B8048", "PreferedLanguage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PreferedLanguage>("eNegModel.FK__User__LCID__619B8048", "PreferedLanguage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PreferedLanguage> PreferedLanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PreferedLanguage>("eNegModel.FK__User__LCID__619B8048", "PreferedLanguage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PreferedLanguage>("eNegModel.FK__User__LCID__619B8048", "PreferedLanguage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Profile__UserID__5CD6CB2B", "Profile")]
        public EntityCollection<Profile> Profiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Profile>("eNegModel.FK__Profile__UserID__5CD6CB2B", "Profile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Profile>("eNegModel.FK__Profile__UserID__5CD6CB2B", "Profile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__User__SecurityQu__60A75C0F", "SecurityQuestion")]
        public SecurityQuestion SecurityQuestion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityQuestion>("eNegModel.FK__User__SecurityQu__60A75C0F", "SecurityQuestion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityQuestion>("eNegModel.FK__User__SecurityQu__60A75C0F", "SecurityQuestion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecurityQuestion> SecurityQuestionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityQuestion>("eNegModel.FK__User__SecurityQu__60A75C0F", "SecurityQuestion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecurityQuestion>("eNegModel.FK__User__SecurityQu__60A75C0F", "SecurityQuestion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__UserRole__UserID__6383C8BA", "UserRole")]
        public EntityCollection<UserRole> UserRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRole>("eNegModel.FK__UserRole__UserID__6383C8BA", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRole>("eNegModel.FK__UserRole__UserID__6383C8BA", "UserRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="UserRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserRole object.
        /// </summary>
        /// <param name="userRoleID">Initial value of the UserRoleID property.</param>
        public static UserRole CreateUserRole(global::System.Guid userRoleID)
        {
            UserRole userRole = new UserRole();
            userRole.UserRoleID = userRoleID;
            return userRole;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserRoleID
        {
            get
            {
                return _UserRoleID;
            }
            set
            {
                if (_UserRoleID != value)
                {
                    OnUserRoleIDChanging(value);
                    ReportPropertyChanging("UserRoleID");
                    _UserRoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserRoleID");
                    OnUserRoleIDChanged();
                }
            }
        }
        private global::System.Guid _UserRoleID;
        partial void OnUserRoleIDChanging(global::System.Guid value);
        partial void OnUserRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Guid> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Guid> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private Nullable<global::System.Guid> _RoleID;
        partial void OnRoleIDChanging(Nullable<global::System.Guid> value);
        partial void OnRoleIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__UserRole__RoleID__6477ECF3", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("eNegModel.FK__UserRole__RoleID__6477ECF3", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("eNegModel.FK__UserRole__RoleID__6477ECF3", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("eNegModel.FK__UserRole__RoleID__6477ECF3", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("eNegModel.FK__UserRole__RoleID__6477ECF3", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__UserRole__UserID__6383C8BA", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__UserRole__UserID__6383C8BA", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__UserRole__UserID__6383C8BA", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__UserRole__UserID__6383C8BA", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("eNegModel.FK__UserRole__UserID__6383C8BA", "User", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
