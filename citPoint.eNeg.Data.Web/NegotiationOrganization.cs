//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace citPOINT.eNeg.Data.Web
{
    public partial class NegotiationOrganization
    {
        #region Primitive Properties
    
        public virtual System.Guid NegotiationOrganizationID
        {
            get;
            set;
        }
    
        public virtual System.Guid NegotiationID
        {
            get { return _negotiationID; }
            set
            {
                if (_negotiationID != value)
                {
                    if (Negotiation != null && Negotiation.NegotiationID != value)
                    {
                        Negotiation = null;
                    }
                    _negotiationID = value;
                }
            }
        }
        private System.Guid _negotiationID;
    
        public virtual System.Guid OrganizationID
        {
            get { return _organizationID; }
            set
            {
                if (_organizationID != value)
                {
                    if (Organization != null && Organization.OrganizationID != value)
                    {
                        Organization = null;
                    }
                    _organizationID = value;
                }
            }
        }
        private System.Guid _organizationID;
    
        public virtual bool Deleted
        {
            get;
            set;
        }
    
        public virtual Nullable<System.Guid> DeletedBy
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> DeletedOn
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Negotiation Negotiation
        {
            get { return _negotiation; }
            set
            {
                if (!ReferenceEquals(_negotiation, value))
                {
                    var previousValue = _negotiation;
                    _negotiation = value;
                    FixupNegotiation(previousValue);
                }
            }
        }
        private Negotiation _negotiation;
    
        public virtual Organization Organization
        {
            get { return _organization; }
            set
            {
                if (!ReferenceEquals(_organization, value))
                {
                    var previousValue = _organization;
                    _organization = value;
                    FixupOrganization(previousValue);
                }
            }
        }
        private Organization _organization;

        #endregion
        #region Association Fixup
    
        private void FixupNegotiation(Negotiation previousValue)
        {
            if (previousValue != null && previousValue.NegotiationOrganizations.Contains(this))
            {
                previousValue.NegotiationOrganizations.Remove(this);
            }
    
            if (Negotiation != null)
            {
                if (!Negotiation.NegotiationOrganizations.Contains(this))
                {
                    Negotiation.NegotiationOrganizations.Add(this);
                }
                if (NegotiationID != Negotiation.NegotiationID)
                {
                    NegotiationID = Negotiation.NegotiationID;
                }
            }
        }
    
        private void FixupOrganization(Organization previousValue)
        {
            if (previousValue != null && previousValue.NegotiationOrganizations.Contains(this))
            {
                previousValue.NegotiationOrganizations.Remove(this);
            }
    
            if (Organization != null)
            {
                if (!Organization.NegotiationOrganizations.Contains(this))
                {
                    Organization.NegotiationOrganizations.Add(this);
                }
                if (OrganizationID != Organization.OrganizationID)
                {
                    OrganizationID = Organization.OrganizationID;
                }
            }
        }

        #endregion
    }
}
