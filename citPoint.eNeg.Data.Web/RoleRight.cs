//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace citPOINT.eNeg.Data.Web
{
    public partial class RoleRight
    {
        #region Primitive Properties
    
        public virtual System.Guid RoleRightID
        {
            get;
            set;
        }
    
        public virtual Nullable<System.Guid> RightID
        {
            get { return _rightID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_rightID != value)
                    {
                        if (Right != null && Right.RightID != value)
                        {
                            Right = null;
                        }
                        _rightID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _rightID;
    
        public virtual Nullable<System.Guid> RoleID
        {
            get { return _roleID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_roleID != value)
                    {
                        if (Role != null && Role.RoleID != value)
                        {
                            Role = null;
                        }
                        _roleID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _roleID;

        #endregion
        #region Navigation Properties
    
        public virtual Right Right
        {
            get { return _right; }
            set
            {
                if (!ReferenceEquals(_right, value))
                {
                    var previousValue = _right;
                    _right = value;
                    FixupRight(previousValue);
                }
            }
        }
        private Right _right;
    
        public virtual Role Role
        {
            get { return _role; }
            set
            {
                if (!ReferenceEquals(_role, value))
                {
                    var previousValue = _role;
                    _role = value;
                    FixupRole(previousValue);
                }
            }
        }
        private Role _role;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupRight(Right previousValue)
        {
            if (previousValue != null && previousValue.RoleRight.Contains(this))
            {
                previousValue.RoleRight.Remove(this);
            }
    
            if (Right != null)
            {
                if (!Right.RoleRight.Contains(this))
                {
                    Right.RoleRight.Add(this);
                }
                if (RightID != Right.RightID)
                {
                    RightID = Right.RightID;
                }
            }
            else if (!_settingFK)
            {
                RightID = null;
            }
        }
    
        private void FixupRole(Role previousValue)
        {
            if (previousValue != null && previousValue.RoleRight.Contains(this))
            {
                previousValue.RoleRight.Remove(this);
            }
    
            if (Role != null)
            {
                if (!Role.RoleRight.Contains(this))
                {
                    Role.RoleRight.Add(this);
                }
                if (RoleID != Role.RoleID)
                {
                    RoleID = Role.RoleID;
                }
            }
            else if (!_settingFK)
            {
                RoleID = null;
            }
        }

        #endregion
    }
}
