//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("eNegModel", "FK__User__CountryID__5224328E", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.eNeg.Data.Web.Country), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.User), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__User__LCID__51300E55", "PreferedLanguage", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.eNeg.Data.Web.PreferedLanguage), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.User), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__Profile__UserID__68487DD7", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.eNeg.Data.Web.User), "Profile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.Profile), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__RoleRight__Right__693CA210", "Right", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.eNeg.Data.Web.Right), "RoleRight", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.RoleRight), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__RoleRight__RoleI__6A30C649", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.eNeg.Data.Web.Role), "RoleRight", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.RoleRight), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__UserRole__RoleID__6FE99F9F", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.eNeg.Data.Web.Role), "UserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.UserRole), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__User__SecurityQu__503BEA1C", "SecurityQuestion", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.eNeg.Data.Web.SecurityQuestion), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.User), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__UserRole__UserID__6EF57B66", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.eNeg.Data.Web.User), "UserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.UserRole), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__User__AccountTyp__4F47C5E3", "AccountType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.eNeg.Data.Web.AccountType), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.User), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__Negotiati__Appli__656C112C", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.eNeg.Data.Web.Application), "NegotiationApplicationStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.NegotiationApplicationStatu), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__Channel__Channel__5CD6CB2B", "ChannelType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.eNeg.Data.Web.ChannelType), "Channel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.Channel), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__Conversat__Delet__5EBF139D", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.eNeg.Data.Web.User), "Conversation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.Conversation), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__Conversat__Negot__5DCAEF64", "Negotiation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.eNeg.Data.Web.Negotiation), "Conversation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.Conversation), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__Negotiati__Negot__66603565", "Negotiation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.eNeg.Data.Web.Negotiation), "NegotiationApplicationStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.NegotiationApplicationStatu), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__Negotiati__Statu__6477ECF3", "NegotiationStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.eNeg.Data.Web.NegotiationStatu), "Negotiation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.Negotiation), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__Negotiati__UserI__6754599E", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.eNeg.Data.Web.User), "NegotiationApplicationStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.NegotiationApplicationStatu), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__History__ActionT__5FB337D6", "ActionType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.eNeg.Data.Web.ActionType), "History", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.History), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK_CategoryLog_Category", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.eNeg.Data.Web.Category), "CategoryLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.CategoryLog), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK_CategoryLog_Log", "Log", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.eNeg.Data.Web.Log), "CategoryLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.CategoryLog), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__History__UserID__60A75C0F", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.eNeg.Data.Web.User), "History", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.History), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__Attacheme__Messa__571DF1D5", "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.eNeg.Data.Web.Message), "Attachement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.Attachement), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__Message__Channel__5DCAEF64", "Channel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.eNeg.Data.Web.Channel), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.Message), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__Message__Convers__5CD6CB2B", "Conversation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.eNeg.Data.Web.Conversation), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.Message), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__Message__Deleted__5EBF139D", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.eNeg.Data.Web.User), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.Message), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__UserAppli__Appli__55009F39", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.eNeg.Data.Web.Application), "UserApplicationStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.UserApplicationStatu), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK__UserAppli__UserI__55F4C372", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.eNeg.Data.Web.User), "UserApplicationStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.UserApplicationStatu), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK_User_Culture", "Culture", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.eNeg.Data.Web.Culture), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.User), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK_NegotiationOrganization_Negotiation", "Negotiation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.eNeg.Data.Web.Negotiation), "NegotiationOrganization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.NegotiationOrganization), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK_NegotiationOrganization_Organization", "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.eNeg.Data.Web.Organization), "NegotiationOrganization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.NegotiationOrganization), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK_Organization_OrganizationType", "OrganizationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.eNeg.Data.Web.OrganizationType), "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.Organization), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK_UserOrganization_Organization", "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.eNeg.Data.Web.Organization), "UserOrganization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.UserOrganization), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK_UserOrganization_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.eNeg.Data.Web.User), "UserOrganization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.UserOrganization), true)]
[assembly: EdmRelationshipAttribute("eNegModel", "FK_UserOperation_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(citPOINT.eNeg.Data.Web.User), "UserOperation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.eNeg.Data.Web.UserOperation), true)]

#endregion

namespace citPOINT.eNeg.Data.Web
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class eNegEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new eNegEntities object using the connection string found in the 'eNegEntities' section of the application configuration file.
        /// </summary>
        public eNegEntities() : base("name=eNegEntities", "eNegEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new eNegEntities object.
        /// </summary>
        public eNegEntities(string connectionString) : base(connectionString, "eNegEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new eNegEntities object.
        /// </summary>
        public eNegEntities(EntityConnection connection) : base(connection, "eNegEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Country
        {
            get
            {
                if ((_Country == null))
                {
                    _Country = base.CreateObjectSet<Country>("Country");
                }
                return _Country;
            }
        }
        private ObjectSet<Country> _Country;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PreferedLanguage> PreferedLanguage
        {
            get
            {
                if ((_PreferedLanguage == null))
                {
                    _PreferedLanguage = base.CreateObjectSet<PreferedLanguage>("PreferedLanguage");
                }
                return _PreferedLanguage;
            }
        }
        private ObjectSet<PreferedLanguage> _PreferedLanguage;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Profile> Profile
        {
            get
            {
                if ((_Profile == null))
                {
                    _Profile = base.CreateObjectSet<Profile>("Profile");
                }
                return _Profile;
            }
        }
        private ObjectSet<Profile> _Profile;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Right> Right
        {
            get
            {
                if ((_Right == null))
                {
                    _Right = base.CreateObjectSet<Right>("Right");
                }
                return _Right;
            }
        }
        private ObjectSet<Right> _Right;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Role
        {
            get
            {
                if ((_Role == null))
                {
                    _Role = base.CreateObjectSet<Role>("Role");
                }
                return _Role;
            }
        }
        private ObjectSet<Role> _Role;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RoleRight> RoleRight
        {
            get
            {
                if ((_RoleRight == null))
                {
                    _RoleRight = base.CreateObjectSet<RoleRight>("RoleRight");
                }
                return _RoleRight;
            }
        }
        private ObjectSet<RoleRight> _RoleRight;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SecurityQuestion> SecurityQuestion
        {
            get
            {
                if ((_SecurityQuestion == null))
                {
                    _SecurityQuestion = base.CreateObjectSet<SecurityQuestion>("SecurityQuestion");
                }
                return _SecurityQuestion;
            }
        }
        private ObjectSet<SecurityQuestion> _SecurityQuestion;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<User>("User");
                }
                return _User;
            }
        }
        private ObjectSet<User> _User;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserRole> UserRole
        {
            get
            {
                if ((_UserRole == null))
                {
                    _UserRole = base.CreateObjectSet<UserRole>("UserRole");
                }
                return _UserRole;
            }
        }
        private ObjectSet<UserRole> _UserRole;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountType> AccountType
        {
            get
            {
                if ((_AccountType == null))
                {
                    _AccountType = base.CreateObjectSet<AccountType>("AccountType");
                }
                return _AccountType;
            }
        }
        private ObjectSet<AccountType> _AccountType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Application> Applications
        {
            get
            {
                if ((_Applications == null))
                {
                    _Applications = base.CreateObjectSet<Application>("Applications");
                }
                return _Applications;
            }
        }
        private ObjectSet<Application> _Applications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Attachement> Attachements
        {
            get
            {
                if ((_Attachements == null))
                {
                    _Attachements = base.CreateObjectSet<Attachement>("Attachements");
                }
                return _Attachements;
            }
        }
        private ObjectSet<Attachement> _Attachements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Channel> Channels
        {
            get
            {
                if ((_Channels == null))
                {
                    _Channels = base.CreateObjectSet<Channel>("Channels");
                }
                return _Channels;
            }
        }
        private ObjectSet<Channel> _Channels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChannelType> ChannelTypes
        {
            get
            {
                if ((_ChannelTypes == null))
                {
                    _ChannelTypes = base.CreateObjectSet<ChannelType>("ChannelTypes");
                }
                return _ChannelTypes;
            }
        }
        private ObjectSet<ChannelType> _ChannelTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Conversation> Conversations
        {
            get
            {
                if ((_Conversations == null))
                {
                    _Conversations = base.CreateObjectSet<Conversation>("Conversations");
                }
                return _Conversations;
            }
        }
        private ObjectSet<Conversation> _Conversations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Negotiation> Negotiations
        {
            get
            {
                if ((_Negotiations == null))
                {
                    _Negotiations = base.CreateObjectSet<Negotiation>("Negotiations");
                }
                return _Negotiations;
            }
        }
        private ObjectSet<Negotiation> _Negotiations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NegotiationApplicationStatu> NegotiationApplicationStatus
        {
            get
            {
                if ((_NegotiationApplicationStatus == null))
                {
                    _NegotiationApplicationStatus = base.CreateObjectSet<NegotiationApplicationStatu>("NegotiationApplicationStatus");
                }
                return _NegotiationApplicationStatus;
            }
        }
        private ObjectSet<NegotiationApplicationStatu> _NegotiationApplicationStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NegotiationStatu> NegotiationStatus
        {
            get
            {
                if ((_NegotiationStatus == null))
                {
                    _NegotiationStatus = base.CreateObjectSet<NegotiationStatu>("NegotiationStatus");
                }
                return _NegotiationStatus;
            }
        }
        private ObjectSet<NegotiationStatu> _NegotiationStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActionType> ActionTypes
        {
            get
            {
                if ((_ActionTypes == null))
                {
                    _ActionTypes = base.CreateObjectSet<ActionType>("ActionTypes");
                }
                return _ActionTypes;
            }
        }
        private ObjectSet<ActionType> _ActionTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CategoryLog> CategoryLogs
        {
            get
            {
                if ((_CategoryLogs == null))
                {
                    _CategoryLogs = base.CreateObjectSet<CategoryLog>("CategoryLogs");
                }
                return _CategoryLogs;
            }
        }
        private ObjectSet<CategoryLog> _CategoryLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<History> Histories
        {
            get
            {
                if ((_Histories == null))
                {
                    _Histories = base.CreateObjectSet<History>("Histories");
                }
                return _Histories;
            }
        }
        private ObjectSet<History> _Histories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Log> Logs
        {
            get
            {
                if ((_Logs == null))
                {
                    _Logs = base.CreateObjectSet<Log>("Logs");
                }
                return _Logs;
            }
        }
        private ObjectSet<Log> _Logs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Message> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Message>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Message> _Messages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserApplicationStatu> UserApplicationStatus
        {
            get
            {
                if ((_UserApplicationStatus == null))
                {
                    _UserApplicationStatus = base.CreateObjectSet<UserApplicationStatu>("UserApplicationStatus");
                }
                return _UserApplicationStatus;
            }
        }
        private ObjectSet<UserApplicationStatu> _UserApplicationStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Culture> Cultures
        {
            get
            {
                if ((_Cultures == null))
                {
                    _Cultures = base.CreateObjectSet<Culture>("Cultures");
                }
                return _Cultures;
            }
        }
        private ObjectSet<Culture> _Cultures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NegotiationOrganization> NegotiationOrganizations
        {
            get
            {
                if ((_NegotiationOrganizations == null))
                {
                    _NegotiationOrganizations = base.CreateObjectSet<NegotiationOrganization>("NegotiationOrganizations");
                }
                return _NegotiationOrganizations;
            }
        }
        private ObjectSet<NegotiationOrganization> _NegotiationOrganizations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Organization> Organizations
        {
            get
            {
                if ((_Organizations == null))
                {
                    _Organizations = base.CreateObjectSet<Organization>("Organizations");
                }
                return _Organizations;
            }
        }
        private ObjectSet<Organization> _Organizations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrganizationType> OrganizationTypes
        {
            get
            {
                if ((_OrganizationTypes == null))
                {
                    _OrganizationTypes = base.CreateObjectSet<OrganizationType>("OrganizationTypes");
                }
                return _OrganizationTypes;
            }
        }
        private ObjectSet<OrganizationType> _OrganizationTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserOrganization> UserOrganizations
        {
            get
            {
                if ((_UserOrganizations == null))
                {
                    _UserOrganizations = base.CreateObjectSet<UserOrganization>("UserOrganizations");
                }
                return _UserOrganizations;
            }
        }
        private ObjectSet<UserOrganization> _UserOrganizations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserOperation> UserOperations
        {
            get
            {
                if ((_UserOperations == null))
                {
                    _UserOperations = base.CreateObjectSet<UserOperation>("UserOperations");
                }
                return _UserOperations;
            }
        }
        private ObjectSet<UserOperation> _UserOperations;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Country EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountry(Country country)
        {
            base.AddObject("Country", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PreferedLanguage EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPreferedLanguage(PreferedLanguage preferedLanguage)
        {
            base.AddObject("PreferedLanguage", preferedLanguage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Profile EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProfile(Profile profile)
        {
            base.AddObject("Profile", profile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Right EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRight(Right right)
        {
            base.AddObject("Right", right);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Role EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRole(Role role)
        {
            base.AddObject("Role", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RoleRight EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoleRight(RoleRight roleRight)
        {
            base.AddObject("RoleRight", roleRight);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SecurityQuestion EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSecurityQuestion(SecurityQuestion securityQuestion)
        {
            base.AddObject("SecurityQuestion", securityQuestion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the User EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUser(User user)
        {
            base.AddObject("User", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserRole EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserRole(UserRole userRole)
        {
            base.AddObject("UserRole", userRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountType(AccountType accountType)
        {
            base.AddObject("AccountType", accountType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Applications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplications(Application application)
        {
            base.AddObject("Applications", application);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Attachements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttachements(Attachement attachement)
        {
            base.AddObject("Attachements", attachement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Channels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChannels(Channel channel)
        {
            base.AddObject("Channels", channel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChannelTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChannelTypes(ChannelType channelType)
        {
            base.AddObject("ChannelTypes", channelType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Conversations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConversations(Conversation conversation)
        {
            base.AddObject("Conversations", conversation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Negotiations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNegotiations(Negotiation negotiation)
        {
            base.AddObject("Negotiations", negotiation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NegotiationApplicationStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNegotiationApplicationStatus(NegotiationApplicationStatu negotiationApplicationStatu)
        {
            base.AddObject("NegotiationApplicationStatus", negotiationApplicationStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NegotiationStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNegotiationStatus(NegotiationStatu negotiationStatu)
        {
            base.AddObject("NegotiationStatus", negotiationStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActionTypes(ActionType actionType)
        {
            base.AddObject("ActionTypes", actionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CategoryLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategoryLogs(CategoryLog categoryLog)
        {
            base.AddObject("CategoryLogs", categoryLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Histories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHistories(History history)
        {
            base.AddObject("Histories", history);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Logs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogs(Log log)
        {
            base.AddObject("Logs", log);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Messages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserApplicationStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserApplicationStatus(UserApplicationStatu userApplicationStatu)
        {
            base.AddObject("UserApplicationStatus", userApplicationStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cultures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCultures(Culture culture)
        {
            base.AddObject("Cultures", culture);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NegotiationOrganizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNegotiationOrganizations(NegotiationOrganization negotiationOrganization)
        {
            base.AddObject("NegotiationOrganizations", negotiationOrganization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Organizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrganizations(Organization organization)
        {
            base.AddObject("Organizations", organization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrganizationTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrganizationTypes(OrganizationType organizationType)
        {
            base.AddObject("OrganizationTypes", organizationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserOrganizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserOrganizations(UserOrganization userOrganization)
        {
            base.AddObject("UserOrganizations", userOrganization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserOperations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserOperations(UserOperation userOperation)
        {
            base.AddObject("UserOperations", userOperation);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<User> UserResetByUserID(Nullable<global::System.Guid> userID)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<User>("UserResetByUserID", userIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<User> UserResetByUserID(Nullable<global::System.Guid> userID, MergeOption mergeOption)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<User>("UserResetByUserID", mergeOption, userIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<GetRightsByUserId_Result> GetRightsByUserId(Nullable<global::System.Guid> userID)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<GetRightsByUserId_Result>("GetRightsByUserId", userIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<User> MakeUserOffline(Nullable<global::System.Guid> userID)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<User>("MakeUserOffline", userIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<User> MakeUserOffline(Nullable<global::System.Guid> userID, MergeOption mergeOption)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<User>("MakeUserOffline", mergeOption, userIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        /// <param name="iPAddress">No Metadata Documentation available.</param>
        public ObjectResult<User> MakeUserOnline(Nullable<global::System.Guid> userID, global::System.String iPAddress)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            ObjectParameter iPAddressParameter;
            if (iPAddress != null)
            {
                iPAddressParameter = new ObjectParameter("IPAddress", iPAddress);
            }
            else
            {
                iPAddressParameter = new ObjectParameter("IPAddress", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<User>("MakeUserOnline", userIDParameter, iPAddressParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="userID">No Metadata Documentation available.</param>
        /// <param name="iPAddress">No Metadata Documentation available.</param>
        public ObjectResult<User> MakeUserOnline(Nullable<global::System.Guid> userID, global::System.String iPAddress, MergeOption mergeOption)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            ObjectParameter iPAddressParameter;
            if (iPAddress != null)
            {
                iPAddressParameter = new ObjectParameter("IPAddress", iPAddress);
            }
            else
            {
                iPAddressParameter = new ObjectParameter("IPAddress", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<User>("MakeUserOnline", mergeOption, userIDParameter, iPAddressParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        public int DeleteUserByID(Nullable<global::System.Guid> userID)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction("DeleteUserByID", userIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="operationString">No Metadata Documentation available.</param>
        /// <param name="operationType">No Metadata Documentation available.</param>
        public ObjectResult<User> GetUserByOperationString(global::System.String operationString, Nullable<global::System.Byte> operationType)
        {
            ObjectParameter operationStringParameter;
            if (operationString != null)
            {
                operationStringParameter = new ObjectParameter("OperationString", operationString);
            }
            else
            {
                operationStringParameter = new ObjectParameter("OperationString", typeof(global::System.String));
            }
    
            ObjectParameter operationTypeParameter;
            if (operationType.HasValue)
            {
                operationTypeParameter = new ObjectParameter("OperationType", operationType);
            }
            else
            {
                operationTypeParameter = new ObjectParameter("OperationType", typeof(global::System.Byte));
            }
    
            return base.ExecuteFunction<User>("GetUserByOperationString", operationStringParameter, operationTypeParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="operationString">No Metadata Documentation available.</param>
        /// <param name="operationType">No Metadata Documentation available.</param>
        public ObjectResult<User> GetUserByOperationString(global::System.String operationString, Nullable<global::System.Byte> operationType, MergeOption mergeOption)
        {
            ObjectParameter operationStringParameter;
            if (operationString != null)
            {
                operationStringParameter = new ObjectParameter("OperationString", operationString);
            }
            else
            {
                operationStringParameter = new ObjectParameter("OperationString", typeof(global::System.String));
            }
    
            ObjectParameter operationTypeParameter;
            if (operationType.HasValue)
            {
                operationTypeParameter = new ObjectParameter("OperationType", operationType);
            }
            else
            {
                operationTypeParameter = new ObjectParameter("OperationType", typeof(global::System.Byte));
            }
    
            return base.ExecuteFunction<User>("GetUserByOperationString", mergeOption, operationStringParameter, operationTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="operationString">No Metadata Documentation available.</param>
        /// <param name="type">No Metadata Documentation available.</param>
        public ObjectResult<User> UpdateUserByConfirmMail(global::System.String operationString, Nullable<global::System.Byte> type)
        {
            ObjectParameter operationStringParameter;
            if (operationString != null)
            {
                operationStringParameter = new ObjectParameter("OperationString", operationString);
            }
            else
            {
                operationStringParameter = new ObjectParameter("OperationString", typeof(global::System.String));
            }
    
            ObjectParameter typeParameter;
            if (type.HasValue)
            {
                typeParameter = new ObjectParameter("Type", type);
            }
            else
            {
                typeParameter = new ObjectParameter("Type", typeof(global::System.Byte));
            }
    
            return base.ExecuteFunction<User>("UpdateUserByConfirmMail", operationStringParameter, typeParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="operationString">No Metadata Documentation available.</param>
        /// <param name="type">No Metadata Documentation available.</param>
        public ObjectResult<User> UpdateUserByConfirmMail(global::System.String operationString, Nullable<global::System.Byte> type, MergeOption mergeOption)
        {
            ObjectParameter operationStringParameter;
            if (operationString != null)
            {
                operationStringParameter = new ObjectParameter("OperationString", operationString);
            }
            else
            {
                operationStringParameter = new ObjectParameter("OperationString", typeof(global::System.String));
            }
    
            ObjectParameter typeParameter;
            if (type.HasValue)
            {
                typeParameter = new ObjectParameter("Type", type);
            }
            else
            {
                typeParameter = new ObjectParameter("Type", typeof(global::System.Byte));
            }
    
            return base.ExecuteFunction<User>("UpdateUserByConfirmMail", mergeOption, operationStringParameter, typeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<User> DeleteUserOperationByUserID(Nullable<global::System.Guid> userID)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<User>("DeleteUserOperationByUserID", userIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<User> DeleteUserOperationByUserID(Nullable<global::System.Guid> userID, MergeOption mergeOption)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<User>("DeleteUserOperationByUserID", mergeOption, userIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="emailAddress">No Metadata Documentation available.</param>
        public ObjectResult<User> UserCanLogin(global::System.String emailAddress)
        {
            ObjectParameter emailAddressParameter;
            if (emailAddress != null)
            {
                emailAddressParameter = new ObjectParameter("EmailAddress", emailAddress);
            }
            else
            {
                emailAddressParameter = new ObjectParameter("EmailAddress", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<User>("UserCanLogin", emailAddressParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="emailAddress">No Metadata Documentation available.</param>
        public ObjectResult<User> UserCanLogin(global::System.String emailAddress, MergeOption mergeOption)
        {
            ObjectParameter emailAddressParameter;
            if (emailAddress != null)
            {
                emailAddressParameter = new ObjectParameter("EmailAddress", emailAddress);
            }
            else
            {
                emailAddressParameter = new ObjectParameter("EmailAddress", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<User>("UserCanLogin", mergeOption, emailAddressParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<Role> GetRolesByUserID(Nullable<global::System.Guid> userID)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<Role>("GetRolesByUserID", userIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<Role> GetRolesByUserID(Nullable<global::System.Guid> userID, MergeOption mergeOption)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<Role>("GetRolesByUserID", mergeOption, userIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="key">No Metadata Documentation available.</param>
        /// <param name="userID">No Metadata Documentation available.</param>
        /// <param name="isForPublicProfile">No Metadata Documentation available.</param>
        public ObjectResult<User> FindUser(global::System.String key, Nullable<global::System.Guid> userID, Nullable<global::System.Boolean> isForPublicProfile)
        {
            ObjectParameter keyParameter;
            if (key != null)
            {
                keyParameter = new ObjectParameter("key", key);
            }
            else
            {
                keyParameter = new ObjectParameter("key", typeof(global::System.String));
            }
    
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            ObjectParameter isForPublicProfileParameter;
            if (isForPublicProfile.HasValue)
            {
                isForPublicProfileParameter = new ObjectParameter("IsForPublicProfile", isForPublicProfile);
            }
            else
            {
                isForPublicProfileParameter = new ObjectParameter("IsForPublicProfile", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<User>("FindUser", keyParameter, userIDParameter, isForPublicProfileParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="key">No Metadata Documentation available.</param>
        /// <param name="userID">No Metadata Documentation available.</param>
        /// <param name="isForPublicProfile">No Metadata Documentation available.</param>
        public ObjectResult<User> FindUser(global::System.String key, Nullable<global::System.Guid> userID, Nullable<global::System.Boolean> isForPublicProfile, MergeOption mergeOption)
        {
            ObjectParameter keyParameter;
            if (key != null)
            {
                keyParameter = new ObjectParameter("key", key);
            }
            else
            {
                keyParameter = new ObjectParameter("key", typeof(global::System.String));
            }
    
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            ObjectParameter isForPublicProfileParameter;
            if (isForPublicProfile.HasValue)
            {
                isForPublicProfileParameter = new ObjectParameter("IsForPublicProfile", isForPublicProfile);
            }
            else
            {
                isForPublicProfileParameter = new ObjectParameter("IsForPublicProfile", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<User>("FindUser", mergeOption, keyParameter, userIDParameter, isForPublicProfileParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="key">No Metadata Documentation available.</param>
        /// <param name="userID">No Metadata Documentation available.</param>
        /// <param name="isForPublicProfile">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> FindUsersCount(global::System.String key, Nullable<global::System.Guid> userID, Nullable<global::System.Boolean> isForPublicProfile)
        {
            ObjectParameter keyParameter;
            if (key != null)
            {
                keyParameter = new ObjectParameter("key", key);
            }
            else
            {
                keyParameter = new ObjectParameter("key", typeof(global::System.String));
            }
    
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            ObjectParameter isForPublicProfileParameter;
            if (isForPublicProfile.HasValue)
            {
                isForPublicProfileParameter = new ObjectParameter("IsForPublicProfile", isForPublicProfile);
            }
            else
            {
                isForPublicProfileParameter = new ObjectParameter("IsForPublicProfile", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("FindUsersCount", keyParameter, userIDParameter, isForPublicProfileParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="negotiationID">No Metadata Documentation available.</param>
        /// <param name="negotiationName">No Metadata Documentation available.</param>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> CheckOnNegotiationRepeat(Nullable<global::System.Guid> negotiationID, global::System.String negotiationName, Nullable<global::System.Guid> userID)
        {
            ObjectParameter negotiationIDParameter;
            if (negotiationID.HasValue)
            {
                negotiationIDParameter = new ObjectParameter("NegotiationID", negotiationID);
            }
            else
            {
                negotiationIDParameter = new ObjectParameter("NegotiationID", typeof(global::System.Guid));
            }
    
            ObjectParameter negotiationNameParameter;
            if (negotiationName != null)
            {
                negotiationNameParameter = new ObjectParameter("NegotiationName", negotiationName);
            }
            else
            {
                negotiationNameParameter = new ObjectParameter("NegotiationName", typeof(global::System.String));
            }
    
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("CheckOnNegotiationRepeat", negotiationIDParameter, negotiationNameParameter, userIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationTitle">No Metadata Documentation available.</param>
        /// <param name="userID">No Metadata Documentation available.</param>
        /// <param name="isDMActive">No Metadata Documentation available.</param>
        public ObjectResult<UserApplicationStatu> DataMatchingInAddonUpdate(global::System.String applicationTitle, Nullable<global::System.Guid> userID, Nullable<global::System.Boolean> isDMActive)
        {
            ObjectParameter applicationTitleParameter;
            if (applicationTitle != null)
            {
                applicationTitleParameter = new ObjectParameter("ApplicationTitle", applicationTitle);
            }
            else
            {
                applicationTitleParameter = new ObjectParameter("ApplicationTitle", typeof(global::System.String));
            }
    
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            ObjectParameter isDMActiveParameter;
            if (isDMActive.HasValue)
            {
                isDMActiveParameter = new ObjectParameter("IsDMActive", isDMActive);
            }
            else
            {
                isDMActiveParameter = new ObjectParameter("IsDMActive", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<UserApplicationStatu>("DataMatchingInAddonUpdate", applicationTitleParameter, userIDParameter, isDMActiveParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="applicationTitle">No Metadata Documentation available.</param>
        /// <param name="userID">No Metadata Documentation available.</param>
        /// <param name="isDMActive">No Metadata Documentation available.</param>
        public ObjectResult<UserApplicationStatu> DataMatchingInAddonUpdate(global::System.String applicationTitle, Nullable<global::System.Guid> userID, Nullable<global::System.Boolean> isDMActive, MergeOption mergeOption)
        {
            ObjectParameter applicationTitleParameter;
            if (applicationTitle != null)
            {
                applicationTitleParameter = new ObjectParameter("ApplicationTitle", applicationTitle);
            }
            else
            {
                applicationTitleParameter = new ObjectParameter("ApplicationTitle", typeof(global::System.String));
            }
    
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            ObjectParameter isDMActiveParameter;
            if (isDMActive.HasValue)
            {
                isDMActiveParameter = new ObjectParameter("IsDMActive", isDMActive);
            }
            else
            {
                isDMActiveParameter = new ObjectParameter("IsDMActive", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<UserApplicationStatu>("DataMatchingInAddonUpdate", mergeOption, applicationTitleParameter, userIDParameter, isDMActiveParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationTitle">No Metadata Documentation available.</param>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<UserApplicationStatu> RetrieveApplicationDMStatus(global::System.String applicationTitle, Nullable<global::System.Guid> userID)
        {
            ObjectParameter applicationTitleParameter;
            if (applicationTitle != null)
            {
                applicationTitleParameter = new ObjectParameter("ApplicationTitle", applicationTitle);
            }
            else
            {
                applicationTitleParameter = new ObjectParameter("ApplicationTitle", typeof(global::System.String));
            }
    
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<UserApplicationStatu>("RetrieveApplicationDMStatus", applicationTitleParameter, userIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="applicationTitle">No Metadata Documentation available.</param>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<UserApplicationStatu> RetrieveApplicationDMStatus(global::System.String applicationTitle, Nullable<global::System.Guid> userID, MergeOption mergeOption)
        {
            ObjectParameter applicationTitleParameter;
            if (applicationTitle != null)
            {
                applicationTitleParameter = new ObjectParameter("ApplicationTitle", applicationTitle);
            }
            else
            {
                applicationTitleParameter = new ObjectParameter("ApplicationTitle", typeof(global::System.String));
            }
    
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<UserApplicationStatu>("RetrieveApplicationDMStatus", mergeOption, applicationTitleParameter, userIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        /// <param name="organizationID">No Metadata Documentation available.</param>
        public ObjectResult<UserLeaveOrganizationResult> CanUserLeaveOrganization(Nullable<global::System.Guid> userID, Nullable<global::System.Guid> organizationID)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            ObjectParameter organizationIDParameter;
            if (organizationID.HasValue)
            {
                organizationIDParameter = new ObjectParameter("OrganizationID", organizationID);
            }
            else
            {
                organizationIDParameter = new ObjectParameter("OrganizationID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<UserLeaveOrganizationResult>("CanUserLeaveOrganization", userIDParameter, organizationIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<User> GetUserByID(Nullable<global::System.Guid> userID)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<User>("GetUserByID", userIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<User> GetUserByID(Nullable<global::System.Guid> userID, MergeOption mergeOption)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<User>("GetUserByID", mergeOption, userIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<UserProfileStatisticalsResult> GetUserProfileStatisticals(Nullable<global::System.Guid> userID)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<UserProfileStatisticalsResult>("GetUserProfileStatisticals", userIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="currentUserID">No Metadata Documentation available.</param>
        /// <param name="memberUserID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> CanUserSeeMemberProfile(Nullable<global::System.Guid> currentUserID, Nullable<global::System.Guid> memberUserID)
        {
            ObjectParameter currentUserIDParameter;
            if (currentUserID.HasValue)
            {
                currentUserIDParameter = new ObjectParameter("CurrentUserID", currentUserID);
            }
            else
            {
                currentUserIDParameter = new ObjectParameter("CurrentUserID", typeof(global::System.Guid));
            }
    
            ObjectParameter memberUserIDParameter;
            if (memberUserID.HasValue)
            {
                memberUserIDParameter = new ObjectParameter("MemberUserID", memberUserID);
            }
            else
            {
                memberUserIDParameter = new ObjectParameter("MemberUserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("CanUserSeeMemberProfile", currentUserIDParameter, memberUserIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="negOwner">No Metadata Documentation available.</param>
        /// <param name="negStatus">No Metadata Documentation available.</param>
        /// <param name="archiveYear">No Metadata Documentation available.</param>
        /// <param name="archiveMonth">No Metadata Documentation available.</param>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<Negotiation> GetPublishedNegotiations(Nullable<global::System.Byte> negOwner, Nullable<global::System.Byte> negStatus, Nullable<global::System.Int32> archiveYear, Nullable<global::System.Int32> archiveMonth, Nullable<global::System.Guid> userID)
        {
            ObjectParameter negOwnerParameter;
            if (negOwner.HasValue)
            {
                negOwnerParameter = new ObjectParameter("NegOwner", negOwner);
            }
            else
            {
                negOwnerParameter = new ObjectParameter("NegOwner", typeof(global::System.Byte));
            }
    
            ObjectParameter negStatusParameter;
            if (negStatus.HasValue)
            {
                negStatusParameter = new ObjectParameter("NegStatus", negStatus);
            }
            else
            {
                negStatusParameter = new ObjectParameter("NegStatus", typeof(global::System.Byte));
            }
    
            ObjectParameter archiveYearParameter;
            if (archiveYear.HasValue)
            {
                archiveYearParameter = new ObjectParameter("ArchiveYear", archiveYear);
            }
            else
            {
                archiveYearParameter = new ObjectParameter("ArchiveYear", typeof(global::System.Int32));
            }
    
            ObjectParameter archiveMonthParameter;
            if (archiveMonth.HasValue)
            {
                archiveMonthParameter = new ObjectParameter("ArchiveMonth", archiveMonth);
            }
            else
            {
                archiveMonthParameter = new ObjectParameter("ArchiveMonth", typeof(global::System.Int32));
            }
    
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<Negotiation>("GetPublishedNegotiations", negOwnerParameter, negStatusParameter, archiveYearParameter, archiveMonthParameter, userIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="negOwner">No Metadata Documentation available.</param>
        /// <param name="negStatus">No Metadata Documentation available.</param>
        /// <param name="archiveYear">No Metadata Documentation available.</param>
        /// <param name="archiveMonth">No Metadata Documentation available.</param>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<Negotiation> GetPublishedNegotiations(Nullable<global::System.Byte> negOwner, Nullable<global::System.Byte> negStatus, Nullable<global::System.Int32> archiveYear, Nullable<global::System.Int32> archiveMonth, Nullable<global::System.Guid> userID, MergeOption mergeOption)
        {
            ObjectParameter negOwnerParameter;
            if (negOwner.HasValue)
            {
                negOwnerParameter = new ObjectParameter("NegOwner", negOwner);
            }
            else
            {
                negOwnerParameter = new ObjectParameter("NegOwner", typeof(global::System.Byte));
            }
    
            ObjectParameter negStatusParameter;
            if (negStatus.HasValue)
            {
                negStatusParameter = new ObjectParameter("NegStatus", negStatus);
            }
            else
            {
                negStatusParameter = new ObjectParameter("NegStatus", typeof(global::System.Byte));
            }
    
            ObjectParameter archiveYearParameter;
            if (archiveYear.HasValue)
            {
                archiveYearParameter = new ObjectParameter("ArchiveYear", archiveYear);
            }
            else
            {
                archiveYearParameter = new ObjectParameter("ArchiveYear", typeof(global::System.Int32));
            }
    
            ObjectParameter archiveMonthParameter;
            if (archiveMonth.HasValue)
            {
                archiveMonthParameter = new ObjectParameter("ArchiveMonth", archiveMonth);
            }
            else
            {
                archiveMonthParameter = new ObjectParameter("ArchiveMonth", typeof(global::System.Int32));
            }
    
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<Negotiation>("GetPublishedNegotiations", mergeOption, negOwnerParameter, negStatusParameter, archiveYearParameter, archiveMonthParameter, userIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="negOwner">No Metadata Documentation available.</param>
        /// <param name="negStatus">No Metadata Documentation available.</param>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<NegotiationArchive> GetPublishedNegotiationArchive(Nullable<global::System.Byte> negOwner, Nullable<global::System.Byte> negStatus, Nullable<global::System.Guid> userID)
        {
            ObjectParameter negOwnerParameter;
            if (negOwner.HasValue)
            {
                negOwnerParameter = new ObjectParameter("NegOwner", negOwner);
            }
            else
            {
                negOwnerParameter = new ObjectParameter("NegOwner", typeof(global::System.Byte));
            }
    
            ObjectParameter negStatusParameter;
            if (negStatus.HasValue)
            {
                negStatusParameter = new ObjectParameter("NegStatus", negStatus);
            }
            else
            {
                negStatusParameter = new ObjectParameter("NegStatus", typeof(global::System.Byte));
            }
    
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<NegotiationArchive>("GetPublishedNegotiationArchive", negOwnerParameter, negStatusParameter, userIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<NegotiationArchive> GetClosedNegotiationArchive(Nullable<global::System.Guid> userID)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<NegotiationArchive>("GetClosedNegotiationArchive", userIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="archiveYear">No Metadata Documentation available.</param>
        /// <param name="archiveMonth">No Metadata Documentation available.</param>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<Negotiation> GetClosedNegotiationByArchive(Nullable<global::System.Int32> archiveYear, Nullable<global::System.Int32> archiveMonth, Nullable<global::System.Guid> userID)
        {
            ObjectParameter archiveYearParameter;
            if (archiveYear.HasValue)
            {
                archiveYearParameter = new ObjectParameter("ArchiveYear", archiveYear);
            }
            else
            {
                archiveYearParameter = new ObjectParameter("ArchiveYear", typeof(global::System.Int32));
            }
    
            ObjectParameter archiveMonthParameter;
            if (archiveMonth.HasValue)
            {
                archiveMonthParameter = new ObjectParameter("ArchiveMonth", archiveMonth);
            }
            else
            {
                archiveMonthParameter = new ObjectParameter("ArchiveMonth", typeof(global::System.Int32));
            }
    
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<Negotiation>("GetClosedNegotiationByArchive", archiveYearParameter, archiveMonthParameter, userIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="archiveYear">No Metadata Documentation available.</param>
        /// <param name="archiveMonth">No Metadata Documentation available.</param>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<Negotiation> GetClosedNegotiationByArchive(Nullable<global::System.Int32> archiveYear, Nullable<global::System.Int32> archiveMonth, Nullable<global::System.Guid> userID, MergeOption mergeOption)
        {
            ObjectParameter archiveYearParameter;
            if (archiveYear.HasValue)
            {
                archiveYearParameter = new ObjectParameter("ArchiveYear", archiveYear);
            }
            else
            {
                archiveYearParameter = new ObjectParameter("ArchiveYear", typeof(global::System.Int32));
            }
    
            ObjectParameter archiveMonthParameter;
            if (archiveMonth.HasValue)
            {
                archiveMonthParameter = new ObjectParameter("ArchiveMonth", archiveMonth);
            }
            else
            {
                archiveMonthParameter = new ObjectParameter("ArchiveMonth", typeof(global::System.Int32));
            }
    
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<Negotiation>("GetClosedNegotiationByArchive", mergeOption, archiveYearParameter, archiveMonthParameter, userIDParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="AccountType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountType object.
        /// </summary>
        /// <param name="accountTypeID">Initial value of the AccountTypeID property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        public static AccountType CreateAccountType(global::System.Guid accountTypeID, global::System.String typeName)
        {
            AccountType accountType = new AccountType();
            accountType.AccountTypeID = accountTypeID;
            accountType.TypeName = typeName;
            return accountType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AccountTypeID
        {
            get
            {
                return _AccountTypeID;
            }
            set
            {
                if (_AccountTypeID != value)
                {
                    OnAccountTypeIDChanging(value);
                    ReportPropertyChanging("AccountTypeID");
                    _AccountTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountTypeID");
                    OnAccountTypeIDChanged();
                }
            }
        }
        private global::System.Guid _AccountTypeID;
        partial void OnAccountTypeIDChanging(global::System.Guid value);
        partial void OnAccountTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypeDescription
        {
            get
            {
                return _TypeDescription;
            }
            set
            {
                OnTypeDescriptionChanging(value);
                ReportPropertyChanging("TypeDescription");
                _TypeDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TypeDescription");
                OnTypeDescriptionChanged();
            }
        }
        private global::System.String _TypeDescription;
        partial void OnTypeDescriptionChanging(global::System.String value);
        partial void OnTypeDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__User__AccountTyp__4F47C5E3", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("eNegModel.FK__User__AccountTyp__4F47C5E3", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("eNegModel.FK__User__AccountTyp__4F47C5E3", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="ActionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActionType object.
        /// </summary>
        /// <param name="actionTypeID">Initial value of the ActionTypeID property.</param>
        public static ActionType CreateActionType(global::System.Guid actionTypeID)
        {
            ActionType actionType = new ActionType();
            actionType.ActionTypeID = actionTypeID;
            return actionType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ActionTypeID
        {
            get
            {
                return _ActionTypeID;
            }
            set
            {
                if (_ActionTypeID != value)
                {
                    OnActionTypeIDChanging(value);
                    ReportPropertyChanging("ActionTypeID");
                    _ActionTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActionTypeID");
                    OnActionTypeIDChanged();
                }
            }
        }
        private global::System.Guid _ActionTypeID;
        partial void OnActionTypeIDChanging(global::System.Guid value);
        partial void OnActionTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActionDescription
        {
            get
            {
                return _ActionDescription;
            }
            set
            {
                OnActionDescriptionChanging(value);
                ReportPropertyChanging("ActionDescription");
                _ActionDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ActionDescription");
                OnActionDescriptionChanged();
            }
        }
        private global::System.String _ActionDescription;
        partial void OnActionDescriptionChanging(global::System.String value);
        partial void OnActionDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__History__ActionT__5FB337D6", "History")]
        public EntityCollection<History> Histories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<History>("eNegModel.FK__History__ActionT__5FB337D6", "History");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<History>("eNegModel.FK__History__ActionT__5FB337D6", "History", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="Application")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Application : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Application object.
        /// </summary>
        /// <param name="applicationID">Initial value of the ApplicationID property.</param>
        /// <param name="applicationTitle">Initial value of the ApplicationTitle property.</param>
        /// <param name="applicationRank">Initial value of the ApplicationRank property.</param>
        public static Application CreateApplication(global::System.Guid applicationID, global::System.String applicationTitle, global::System.Int32 applicationRank)
        {
            Application application = new Application();
            application.ApplicationID = applicationID;
            application.ApplicationTitle = applicationTitle;
            application.ApplicationRank = applicationRank;
            return application;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationID
        {
            get
            {
                return _ApplicationID;
            }
            set
            {
                if (_ApplicationID != value)
                {
                    OnApplicationIDChanging(value);
                    ReportPropertyChanging("ApplicationID");
                    _ApplicationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationID");
                    OnApplicationIDChanged();
                }
            }
        }
        private global::System.Guid _ApplicationID;
        partial void OnApplicationIDChanging(global::System.Guid value);
        partial void OnApplicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationTitle
        {
            get
            {
                return _ApplicationTitle;
            }
            set
            {
                OnApplicationTitleChanging(value);
                ReportPropertyChanging("ApplicationTitle");
                _ApplicationTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApplicationTitle");
                OnApplicationTitleChanged();
            }
        }
        private global::System.String _ApplicationTitle;
        partial void OnApplicationTitleChanging(global::System.String value);
        partial void OnApplicationTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AssemblyName
        {
            get
            {
                return _AssemblyName;
            }
            set
            {
                OnAssemblyNameChanging(value);
                ReportPropertyChanging("AssemblyName");
                _AssemblyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AssemblyName");
                OnAssemblyNameChanged();
            }
        }
        private global::System.String _AssemblyName;
        partial void OnAssemblyNameChanging(global::System.String value);
        partial void OnAssemblyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModuleName
        {
            get
            {
                return _ModuleName;
            }
            set
            {
                OnModuleNameChanging(value);
                ReportPropertyChanging("ModuleName");
                _ModuleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModuleName");
                OnModuleNameChanged();
            }
        }
        private global::System.String _ModuleName;
        partial void OnModuleNameChanging(global::System.String value);
        partial void OnModuleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String XapFilePath
        {
            get
            {
                return _XapFilePath;
            }
            set
            {
                OnXapFilePathChanging(value);
                ReportPropertyChanging("XapFilePath");
                _XapFilePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("XapFilePath");
                OnXapFilePathChanged();
            }
        }
        private global::System.String _XapFilePath;
        partial void OnXapFilePathChanging(global::System.String value);
        partial void OnXapFilePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationRank
        {
            get
            {
                return _ApplicationRank;
            }
            set
            {
                OnApplicationRankChanging(value);
                ReportPropertyChanging("ApplicationRank");
                _ApplicationRank = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationRank");
                OnApplicationRankChanged();
            }
        }
        private global::System.Int32 _ApplicationRank;
        partial void OnApplicationRankChanging(global::System.Int32 value);
        partial void OnApplicationRankChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApplicationBaseAddress
        {
            get
            {
                return _ApplicationBaseAddress;
            }
            set
            {
                OnApplicationBaseAddressChanging(value);
                ReportPropertyChanging("ApplicationBaseAddress");
                _ApplicationBaseAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApplicationBaseAddress");
                OnApplicationBaseAddressChanged();
            }
        }
        private global::System.String _ApplicationBaseAddress;
        partial void OnApplicationBaseAddressChanging(global::System.String value);
        partial void OnApplicationBaseAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApplicationMainServicePath
        {
            get
            {
                return _ApplicationMainServicePath;
            }
            set
            {
                OnApplicationMainServicePathChanging(value);
                ReportPropertyChanging("ApplicationMainServicePath");
                _ApplicationMainServicePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApplicationMainServicePath");
                OnApplicationMainServicePathChanged();
            }
        }
        private global::System.String _ApplicationMainServicePath;
        partial void OnApplicationMainServicePathChanging(global::System.String value);
        partial void OnApplicationMainServicePathChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Negotiati__Appli__656C112C", "NegotiationApplicationStatu")]
        public EntityCollection<NegotiationApplicationStatu> NegotiationApplicationStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NegotiationApplicationStatu>("eNegModel.FK__Negotiati__Appli__656C112C", "NegotiationApplicationStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NegotiationApplicationStatu>("eNegModel.FK__Negotiati__Appli__656C112C", "NegotiationApplicationStatu", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__UserAppli__Appli__55009F39", "UserApplicationStatu")]
        public EntityCollection<UserApplicationStatu> UserApplicationStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserApplicationStatu>("eNegModel.FK__UserAppli__Appli__55009F39", "UserApplicationStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserApplicationStatu>("eNegModel.FK__UserAppli__Appli__55009F39", "UserApplicationStatu", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="Attachement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Attachement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Attachement object.
        /// </summary>
        /// <param name="attachementID">Initial value of the AttachementID property.</param>
        public static Attachement CreateAttachement(global::System.Guid attachementID)
        {
            Attachement attachement = new Attachement();
            attachement.AttachementID = attachementID;
            return attachement;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AttachementID
        {
            get
            {
                return _AttachementID;
            }
            set
            {
                if (_AttachementID != value)
                {
                    OnAttachementIDChanging(value);
                    ReportPropertyChanging("AttachementID");
                    _AttachementID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AttachementID");
                    OnAttachementIDChanged();
                }
            }
        }
        private global::System.Guid _AttachementID;
        partial void OnAttachementIDChanging(global::System.Guid value);
        partial void OnAttachementIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AttachementName
        {
            get
            {
                return _AttachementName;
            }
            set
            {
                OnAttachementNameChanging(value);
                ReportPropertyChanging("AttachementName");
                _AttachementName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AttachementName");
                OnAttachementNameChanged();
            }
        }
        private global::System.String _AttachementName;
        partial void OnAttachementNameChanging(global::System.String value);
        partial void OnAttachementNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] AttachementContent
        {
            get
            {
                return StructuralObject.GetValidValue(_AttachementContent);
            }
            set
            {
                OnAttachementContentChanging(value);
                ReportPropertyChanging("AttachementContent");
                _AttachementContent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AttachementContent");
                OnAttachementContentChanged();
            }
        }
        private global::System.Byte[] _AttachementContent;
        partial void OnAttachementContentChanging(global::System.Byte[] value);
        partial void OnAttachementContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> MessageID
        {
            get
            {
                return _MessageID;
            }
            set
            {
                OnMessageIDChanging(value);
                ReportPropertyChanging("MessageID");
                _MessageID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageID");
                OnMessageIDChanged();
            }
        }
        private Nullable<global::System.Guid> _MessageID;
        partial void OnMessageIDChanging(Nullable<global::System.Guid> value);
        partial void OnMessageIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Attacheme__Messa__571DF1D5", "Message")]
        public Message Message
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("eNegModel.FK__Attacheme__Messa__571DF1D5", "Message").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("eNegModel.FK__Attacheme__Messa__571DF1D5", "Message").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Message> MessageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("eNegModel.FK__Attacheme__Messa__571DF1D5", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Message>("eNegModel.FK__Attacheme__Messa__571DF1D5", "Message", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="categoryName">Initial value of the CategoryName property.</param>
        public static Category CreateCategory(global::System.Int32 categoryID, global::System.String categoryName)
        {
            Category category = new Category();
            category.CategoryID = categoryID;
            category.CategoryName = categoryName;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                if (_CategoryID != value)
                {
                    OnCategoryIDChanging(value);
                    ReportPropertyChanging("CategoryID");
                    _CategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryID");
                    OnCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK_CategoryLog_Category", "CategoryLog")]
        public EntityCollection<CategoryLog> CategoryLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CategoryLog>("eNegModel.FK_CategoryLog_Category", "CategoryLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CategoryLog>("eNegModel.FK_CategoryLog_Category", "CategoryLog", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="CategoryLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CategoryLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CategoryLog object.
        /// </summary>
        /// <param name="categoryLogID">Initial value of the CategoryLogID property.</param>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="logID">Initial value of the LogID property.</param>
        public static CategoryLog CreateCategoryLog(global::System.Int32 categoryLogID, global::System.Int32 categoryID, global::System.Int32 logID)
        {
            CategoryLog categoryLog = new CategoryLog();
            categoryLog.CategoryLogID = categoryLogID;
            categoryLog.CategoryID = categoryID;
            categoryLog.LogID = logID;
            return categoryLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryLogID
        {
            get
            {
                return _CategoryLogID;
            }
            set
            {
                if (_CategoryLogID != value)
                {
                    OnCategoryLogIDChanging(value);
                    ReportPropertyChanging("CategoryLogID");
                    _CategoryLogID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryLogID");
                    OnCategoryLogIDChanged();
                }
            }
        }
        private global::System.Int32 _CategoryLogID;
        partial void OnCategoryLogIDChanging(global::System.Int32 value);
        partial void OnCategoryLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LogID
        {
            get
            {
                return _LogID;
            }
            set
            {
                OnLogIDChanging(value);
                ReportPropertyChanging("LogID");
                _LogID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogID");
                OnLogIDChanged();
            }
        }
        private global::System.Int32 _LogID;
        partial void OnLogIDChanging(global::System.Int32 value);
        partial void OnLogIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK_CategoryLog_Category", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("eNegModel.FK_CategoryLog_Category", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("eNegModel.FK_CategoryLog_Category", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("eNegModel.FK_CategoryLog_Category", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("eNegModel.FK_CategoryLog_Category", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK_CategoryLog_Log", "Log")]
        public Log Log
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Log>("eNegModel.FK_CategoryLog_Log", "Log").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Log>("eNegModel.FK_CategoryLog_Log", "Log").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Log> LogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Log>("eNegModel.FK_CategoryLog_Log", "Log");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Log>("eNegModel.FK_CategoryLog_Log", "Log", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="Channel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Channel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Channel object.
        /// </summary>
        /// <param name="channelID">Initial value of the ChannelID property.</param>
        /// <param name="channelName">Initial value of the ChannelName property.</param>
        public static Channel CreateChannel(global::System.Guid channelID, global::System.String channelName)
        {
            Channel channel = new Channel();
            channel.ChannelID = channelID;
            channel.ChannelName = channelName;
            return channel;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ChannelID
        {
            get
            {
                return _ChannelID;
            }
            set
            {
                if (_ChannelID != value)
                {
                    OnChannelIDChanging(value);
                    ReportPropertyChanging("ChannelID");
                    _ChannelID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChannelID");
                    OnChannelIDChanged();
                }
            }
        }
        private global::System.Guid _ChannelID;
        partial void OnChannelIDChanging(global::System.Guid value);
        partial void OnChannelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ChannelName
        {
            get
            {
                return _ChannelName;
            }
            set
            {
                OnChannelNameChanging(value);
                ReportPropertyChanging("ChannelName");
                _ChannelName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ChannelName");
                OnChannelNameChanged();
            }
        }
        private global::System.String _ChannelName;
        partial void OnChannelNameChanging(global::System.String value);
        partial void OnChannelNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ChannelTypeID
        {
            get
            {
                return _ChannelTypeID;
            }
            set
            {
                OnChannelTypeIDChanging(value);
                ReportPropertyChanging("ChannelTypeID");
                _ChannelTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChannelTypeID");
                OnChannelTypeIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ChannelTypeID;
        partial void OnChannelTypeIDChanging(Nullable<global::System.Guid> value);
        partial void OnChannelTypeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Channel__Channel__5CD6CB2B", "ChannelType")]
        public ChannelType ChannelType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChannelType>("eNegModel.FK__Channel__Channel__5CD6CB2B", "ChannelType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChannelType>("eNegModel.FK__Channel__Channel__5CD6CB2B", "ChannelType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ChannelType> ChannelTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ChannelType>("eNegModel.FK__Channel__Channel__5CD6CB2B", "ChannelType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ChannelType>("eNegModel.FK__Channel__Channel__5CD6CB2B", "ChannelType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Message__Channel__5DCAEF64", "Message")]
        public EntityCollection<Message> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("eNegModel.FK__Message__Channel__5DCAEF64", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("eNegModel.FK__Message__Channel__5DCAEF64", "Message", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="ChannelType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChannelType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChannelType object.
        /// </summary>
        /// <param name="channelTypeID">Initial value of the ChannelTypeID property.</param>
        /// <param name="typeName">Initial value of the TypeName property.</param>
        public static ChannelType CreateChannelType(global::System.Guid channelTypeID, global::System.String typeName)
        {
            ChannelType channelType = new ChannelType();
            channelType.ChannelTypeID = channelTypeID;
            channelType.TypeName = typeName;
            return channelType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ChannelTypeID
        {
            get
            {
                return _ChannelTypeID;
            }
            set
            {
                if (_ChannelTypeID != value)
                {
                    OnChannelTypeIDChanging(value);
                    ReportPropertyChanging("ChannelTypeID");
                    _ChannelTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChannelTypeID");
                    OnChannelTypeIDChanged();
                }
            }
        }
        private global::System.Guid _ChannelTypeID;
        partial void OnChannelTypeIDChanging(global::System.Guid value);
        partial void OnChannelTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Channel__Channel__5CD6CB2B", "Channel")]
        public EntityCollection<Channel> Channels
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Channel>("eNegModel.FK__Channel__Channel__5CD6CB2B", "Channel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Channel>("eNegModel.FK__Channel__Channel__5CD6CB2B", "Channel", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="Conversation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Conversation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Conversation object.
        /// </summary>
        /// <param name="conversationID">Initial value of the ConversationID property.</param>
        /// <param name="conversationName">Initial value of the ConversationName property.</param>
        /// <param name="negotiationID">Initial value of the NegotiationID property.</param>
        public static Conversation CreateConversation(global::System.Guid conversationID, global::System.String conversationName, global::System.Guid negotiationID)
        {
            Conversation conversation = new Conversation();
            conversation.ConversationID = conversationID;
            conversation.ConversationName = conversationName;
            conversation.NegotiationID = negotiationID;
            return conversation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ConversationID
        {
            get
            {
                return _ConversationID;
            }
            set
            {
                if (_ConversationID != value)
                {
                    OnConversationIDChanging(value);
                    ReportPropertyChanging("ConversationID");
                    _ConversationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ConversationID");
                    OnConversationIDChanged();
                }
            }
        }
        private global::System.Guid _ConversationID;
        partial void OnConversationIDChanging(global::System.Guid value);
        partial void OnConversationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ConversationName
        {
            get
            {
                return _ConversationName;
            }
            set
            {
                OnConversationNameChanging(value);
                ReportPropertyChanging("ConversationName");
                _ConversationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ConversationName");
                OnConversationNameChanged();
            }
        }
        private global::System.String _ConversationName;
        partial void OnConversationNameChanging(global::System.String value);
        partial void OnConversationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid NegotiationID
        {
            get
            {
                return _NegotiationID;
            }
            set
            {
                OnNegotiationIDChanging(value);
                ReportPropertyChanging("NegotiationID");
                _NegotiationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NegotiationID");
                OnNegotiationIDChanged();
            }
        }
        private global::System.Guid _NegotiationID;
        partial void OnNegotiationIDChanging(global::System.Guid value);
        partial void OnNegotiationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _DeletedBy;
        partial void OnDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Conversat__Delet__5EBF139D", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__Conversat__Delet__5EBF139D", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__Conversat__Delet__5EBF139D", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__Conversat__Delet__5EBF139D", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("eNegModel.FK__Conversat__Delet__5EBF139D", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Conversat__Negot__5DCAEF64", "Negotiation")]
        public Negotiation Negotiation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Negotiation>("eNegModel.FK__Conversat__Negot__5DCAEF64", "Negotiation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Negotiation>("eNegModel.FK__Conversat__Negot__5DCAEF64", "Negotiation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Negotiation> NegotiationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Negotiation>("eNegModel.FK__Conversat__Negot__5DCAEF64", "Negotiation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Negotiation>("eNegModel.FK__Conversat__Negot__5DCAEF64", "Negotiation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Message__Convers__5CD6CB2B", "Message")]
        public EntityCollection<Message> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("eNegModel.FK__Message__Convers__5CD6CB2B", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("eNegModel.FK__Message__Convers__5CD6CB2B", "Message", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        public static Country CreateCountry(global::System.Guid countryID)
        {
            Country country = new Country();
            country.CountryID = countryID;
            return country;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Guid _CountryID;
        partial void OnCountryIDChanging(global::System.Guid value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__User__CountryID__5224328E", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("eNegModel.FK__User__CountryID__5224328E", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("eNegModel.FK__User__CountryID__5224328E", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="Culture")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Culture : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Culture object.
        /// </summary>
        /// <param name="cultureID">Initial value of the CultureID property.</param>
        /// <param name="cultureName">Initial value of the CultureName property.</param>
        public static Culture CreateCulture(global::System.Int32 cultureID, global::System.String cultureName)
        {
            Culture culture = new Culture();
            culture.CultureID = cultureID;
            culture.CultureName = cultureName;
            return culture;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CultureID
        {
            get
            {
                return _CultureID;
            }
            set
            {
                if (_CultureID != value)
                {
                    OnCultureIDChanging(value);
                    ReportPropertyChanging("CultureID");
                    _CultureID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CultureID");
                    OnCultureIDChanged();
                }
            }
        }
        private global::System.Int32 _CultureID;
        partial void OnCultureIDChanging(global::System.Int32 value);
        partial void OnCultureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CultureName
        {
            get
            {
                return _CultureName;
            }
            set
            {
                OnCultureNameChanging(value);
                ReportPropertyChanging("CultureName");
                _CultureName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CultureName");
                OnCultureNameChanged();
            }
        }
        private global::System.String _CultureName;
        partial void OnCultureNameChanging(global::System.String value);
        partial void OnCultureNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK_User_Culture", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("eNegModel.FK_User_Culture", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("eNegModel.FK_User_Culture", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="History")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class History : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new History object.
        /// </summary>
        /// <param name="historyID">Initial value of the HistoryID property.</param>
        /// <param name="actionTypeID">Initial value of the ActionTypeID property.</param>
        /// <param name="actionDate">Initial value of the ActionDate property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static History CreateHistory(global::System.Guid historyID, global::System.Guid actionTypeID, global::System.DateTime actionDate, global::System.Guid userID)
        {
            History history = new History();
            history.HistoryID = historyID;
            history.ActionTypeID = actionTypeID;
            history.ActionDate = actionDate;
            history.UserID = userID;
            return history;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid HistoryID
        {
            get
            {
                return _HistoryID;
            }
            set
            {
                if (_HistoryID != value)
                {
                    OnHistoryIDChanging(value);
                    ReportPropertyChanging("HistoryID");
                    _HistoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HistoryID");
                    OnHistoryIDChanged();
                }
            }
        }
        private global::System.Guid _HistoryID;
        partial void OnHistoryIDChanging(global::System.Guid value);
        partial void OnHistoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OldValue
        {
            get
            {
                return _OldValue;
            }
            set
            {
                OnOldValueChanging(value);
                ReportPropertyChanging("OldValue");
                _OldValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OldValue");
                OnOldValueChanged();
            }
        }
        private global::System.String _OldValue;
        partial void OnOldValueChanging(global::System.String value);
        partial void OnOldValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NewValue
        {
            get
            {
                return _NewValue;
            }
            set
            {
                OnNewValueChanging(value);
                ReportPropertyChanging("NewValue");
                _NewValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NewValue");
                OnNewValueChanged();
            }
        }
        private global::System.String _NewValue;
        partial void OnNewValueChanging(global::System.String value);
        partial void OnNewValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TableName
        {
            get
            {
                return _TableName;
            }
            set
            {
                OnTableNameChanging(value);
                ReportPropertyChanging("TableName");
                _TableName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TableName");
                OnTableNameChanged();
            }
        }
        private global::System.String _TableName;
        partial void OnTableNameChanging(global::System.String value);
        partial void OnTableNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ActionTypeID
        {
            get
            {
                return _ActionTypeID;
            }
            set
            {
                OnActionTypeIDChanging(value);
                ReportPropertyChanging("ActionTypeID");
                _ActionTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActionTypeID");
                OnActionTypeIDChanged();
            }
        }
        private global::System.Guid _ActionTypeID;
        partial void OnActionTypeIDChanging(global::System.Guid value);
        partial void OnActionTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ActionDate
        {
            get
            {
                return _ActionDate;
            }
            set
            {
                OnActionDateChanging(value);
                ReportPropertyChanging("ActionDate");
                _ActionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActionDate");
                OnActionDateChanged();
            }
        }
        private global::System.DateTime _ActionDate;
        partial void OnActionDateChanging(global::System.DateTime value);
        partial void OnActionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__History__ActionT__5FB337D6", "ActionType")]
        public ActionType ActionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionType>("eNegModel.FK__History__ActionT__5FB337D6", "ActionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionType>("eNegModel.FK__History__ActionT__5FB337D6", "ActionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ActionType> ActionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionType>("eNegModel.FK__History__ActionT__5FB337D6", "ActionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ActionType>("eNegModel.FK__History__ActionT__5FB337D6", "ActionType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__History__UserID__60A75C0F", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__History__UserID__60A75C0F", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__History__UserID__60A75C0F", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__History__UserID__60A75C0F", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("eNegModel.FK__History__UserID__60A75C0F", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="Log")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Log : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Log object.
        /// </summary>
        /// <param name="logID">Initial value of the LogID property.</param>
        /// <param name="priority">Initial value of the Priority property.</param>
        /// <param name="severity">Initial value of the Severity property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="timestamp">Initial value of the Timestamp property.</param>
        /// <param name="machineName">Initial value of the MachineName property.</param>
        /// <param name="appDomainName">Initial value of the AppDomainName property.</param>
        /// <param name="processID">Initial value of the ProcessID property.</param>
        /// <param name="processName">Initial value of the ProcessName property.</param>
        public static Log CreateLog(global::System.Int32 logID, global::System.Int32 priority, global::System.String severity, global::System.String title, global::System.DateTime timestamp, global::System.String machineName, global::System.String appDomainName, global::System.String processID, global::System.String processName)
        {
            Log log = new Log();
            log.LogID = logID;
            log.Priority = priority;
            log.Severity = severity;
            log.Title = title;
            log.Timestamp = timestamp;
            log.MachineName = machineName;
            log.AppDomainName = appDomainName;
            log.ProcessID = processID;
            log.ProcessName = processName;
            return log;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LogID
        {
            get
            {
                return _LogID;
            }
            set
            {
                if (_LogID != value)
                {
                    OnLogIDChanging(value);
                    ReportPropertyChanging("LogID");
                    _LogID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LogID");
                    OnLogIDChanged();
                }
            }
        }
        private global::System.Int32 _LogID;
        partial void OnLogIDChanging(global::System.Int32 value);
        partial void OnLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                OnEventIDChanging(value);
                ReportPropertyChanging("EventID");
                _EventID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventID");
                OnEventIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EventID;
        partial void OnEventIDChanging(Nullable<global::System.Int32> value);
        partial void OnEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.Int32 _Priority;
        partial void OnPriorityChanging(global::System.Int32 value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Severity
        {
            get
            {
                return _Severity;
            }
            set
            {
                OnSeverityChanging(value);
                ReportPropertyChanging("Severity");
                _Severity = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Severity");
                OnSeverityChanged();
            }
        }
        private global::System.String _Severity;
        partial void OnSeverityChanging(global::System.String value);
        partial void OnSeverityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Timestamp
        {
            get
            {
                return _Timestamp;
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.DateTime _Timestamp;
        partial void OnTimestampChanging(global::System.DateTime value);
        partial void OnTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MachineName
        {
            get
            {
                return _MachineName;
            }
            set
            {
                OnMachineNameChanging(value);
                ReportPropertyChanging("MachineName");
                _MachineName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MachineName");
                OnMachineNameChanged();
            }
        }
        private global::System.String _MachineName;
        partial void OnMachineNameChanging(global::System.String value);
        partial void OnMachineNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AppDomainName
        {
            get
            {
                return _AppDomainName;
            }
            set
            {
                OnAppDomainNameChanging(value);
                ReportPropertyChanging("AppDomainName");
                _AppDomainName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AppDomainName");
                OnAppDomainNameChanged();
            }
        }
        private global::System.String _AppDomainName;
        partial void OnAppDomainNameChanging(global::System.String value);
        partial void OnAppDomainNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProcessID
        {
            get
            {
                return _ProcessID;
            }
            set
            {
                OnProcessIDChanging(value);
                ReportPropertyChanging("ProcessID");
                _ProcessID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProcessID");
                OnProcessIDChanged();
            }
        }
        private global::System.String _ProcessID;
        partial void OnProcessIDChanging(global::System.String value);
        partial void OnProcessIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProcessName
        {
            get
            {
                return _ProcessName;
            }
            set
            {
                OnProcessNameChanging(value);
                ReportPropertyChanging("ProcessName");
                _ProcessName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProcessName");
                OnProcessNameChanged();
            }
        }
        private global::System.String _ProcessName;
        partial void OnProcessNameChanging(global::System.String value);
        partial void OnProcessNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ThreadName
        {
            get
            {
                return _ThreadName;
            }
            set
            {
                OnThreadNameChanging(value);
                ReportPropertyChanging("ThreadName");
                _ThreadName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ThreadName");
                OnThreadNameChanged();
            }
        }
        private global::System.String _ThreadName;
        partial void OnThreadNameChanging(global::System.String value);
        partial void OnThreadNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Win32ThreadId
        {
            get
            {
                return _Win32ThreadId;
            }
            set
            {
                OnWin32ThreadIdChanging(value);
                ReportPropertyChanging("Win32ThreadId");
                _Win32ThreadId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Win32ThreadId");
                OnWin32ThreadIdChanged();
            }
        }
        private global::System.String _Win32ThreadId;
        partial void OnWin32ThreadIdChanging(global::System.String value);
        partial void OnWin32ThreadIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FormattedMessage
        {
            get
            {
                return _FormattedMessage;
            }
            set
            {
                OnFormattedMessageChanging(value);
                ReportPropertyChanging("FormattedMessage");
                _FormattedMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FormattedMessage");
                OnFormattedMessageChanged();
            }
        }
        private global::System.String _FormattedMessage;
        partial void OnFormattedMessageChanging(global::System.String value);
        partial void OnFormattedMessageChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK_CategoryLog_Log", "CategoryLog")]
        public EntityCollection<CategoryLog> CategoryLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CategoryLog>("eNegModel.FK_CategoryLog_Log", "CategoryLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CategoryLog>("eNegModel.FK_CategoryLog_Log", "CategoryLog", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Message object.
        /// </summary>
        /// <param name="messageID">Initial value of the MessageID property.</param>
        /// <param name="messageContent">Initial value of the MessageContent property.</param>
        /// <param name="messageSender">Initial value of the MessageSender property.</param>
        /// <param name="messageReceiver">Initial value of the MessageReceiver property.</param>
        /// <param name="channelID">Initial value of the ChannelID property.</param>
        /// <param name="isSent">Initial value of the IsSent property.</param>
        /// <param name="isAppsMessage">Initial value of the IsAppsMessage property.</param>
        public static Message CreateMessage(global::System.Guid messageID, global::System.String messageContent, global::System.String messageSender, global::System.String messageReceiver, global::System.Guid channelID, global::System.Boolean isSent, global::System.Boolean isAppsMessage)
        {
            Message message = new Message();
            message.MessageID = messageID;
            message.MessageContent = messageContent;
            message.MessageSender = messageSender;
            message.MessageReceiver = messageReceiver;
            message.ChannelID = channelID;
            message.IsSent = isSent;
            message.IsAppsMessage = isAppsMessage;
            return message;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MessageID
        {
            get
            {
                return _MessageID;
            }
            set
            {
                if (_MessageID != value)
                {
                    OnMessageIDChanging(value);
                    ReportPropertyChanging("MessageID");
                    _MessageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageID");
                    OnMessageIDChanged();
                }
            }
        }
        private global::System.Guid _MessageID;
        partial void OnMessageIDChanging(global::System.Guid value);
        partial void OnMessageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ConversationID
        {
            get
            {
                return _ConversationID;
            }
            set
            {
                OnConversationIDChanging(value);
                ReportPropertyChanging("ConversationID");
                _ConversationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConversationID");
                OnConversationIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ConversationID;
        partial void OnConversationIDChanging(Nullable<global::System.Guid> value);
        partial void OnConversationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MessageContent
        {
            get
            {
                return _MessageContent;
            }
            set
            {
                OnMessageContentChanging(value);
                ReportPropertyChanging("MessageContent");
                _MessageContent = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MessageContent");
                OnMessageContentChanged();
            }
        }
        private global::System.String _MessageContent;
        partial void OnMessageContentChanging(global::System.String value);
        partial void OnMessageContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MessageSubject
        {
            get
            {
                return _MessageSubject;
            }
            set
            {
                OnMessageSubjectChanging(value);
                ReportPropertyChanging("MessageSubject");
                _MessageSubject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MessageSubject");
                OnMessageSubjectChanged();
            }
        }
        private global::System.String _MessageSubject;
        partial void OnMessageSubjectChanging(global::System.String value);
        partial void OnMessageSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MessageSender
        {
            get
            {
                return _MessageSender;
            }
            set
            {
                OnMessageSenderChanging(value);
                ReportPropertyChanging("MessageSender");
                _MessageSender = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MessageSender");
                OnMessageSenderChanged();
            }
        }
        private global::System.String _MessageSender;
        partial void OnMessageSenderChanging(global::System.String value);
        partial void OnMessageSenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MessageReceiver
        {
            get
            {
                return _MessageReceiver;
            }
            set
            {
                OnMessageReceiverChanging(value);
                ReportPropertyChanging("MessageReceiver");
                _MessageReceiver = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MessageReceiver");
                OnMessageReceiverChanged();
            }
        }
        private global::System.String _MessageReceiver;
        partial void OnMessageReceiverChanging(global::System.String value);
        partial void OnMessageReceiverChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MessageDate
        {
            get
            {
                return _MessageDate;
            }
            set
            {
                OnMessageDateChanging(value);
                ReportPropertyChanging("MessageDate");
                _MessageDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageDate");
                OnMessageDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _MessageDate;
        partial void OnMessageDateChanging(Nullable<global::System.DateTime> value);
        partial void OnMessageDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ChannelID
        {
            get
            {
                return _ChannelID;
            }
            set
            {
                OnChannelIDChanging(value);
                ReportPropertyChanging("ChannelID");
                _ChannelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChannelID");
                OnChannelIDChanged();
            }
        }
        private global::System.Guid _ChannelID;
        partial void OnChannelIDChanging(global::System.Guid value);
        partial void OnChannelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSent
        {
            get
            {
                return _IsSent;
            }
            set
            {
                OnIsSentChanging(value);
                ReportPropertyChanging("IsSent");
                _IsSent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSent");
                OnIsSentChanged();
            }
        }
        private global::System.Boolean _IsSent;
        partial void OnIsSentChanging(global::System.Boolean value);
        partial void OnIsSentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _DeletedBy;
        partial void OnDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAppsMessage
        {
            get
            {
                return _IsAppsMessage;
            }
            set
            {
                OnIsAppsMessageChanging(value);
                ReportPropertyChanging("IsAppsMessage");
                _IsAppsMessage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAppsMessage");
                OnIsAppsMessageChanged();
            }
        }
        private global::System.Boolean _IsAppsMessage;
        partial void OnIsAppsMessageChanging(global::System.Boolean value);
        partial void OnIsAppsMessageChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Attacheme__Messa__571DF1D5", "Attachement")]
        public EntityCollection<Attachement> Attachements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Attachement>("eNegModel.FK__Attacheme__Messa__571DF1D5", "Attachement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Attachement>("eNegModel.FK__Attacheme__Messa__571DF1D5", "Attachement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Message__Channel__5DCAEF64", "Channel")]
        public Channel Channel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Channel>("eNegModel.FK__Message__Channel__5DCAEF64", "Channel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Channel>("eNegModel.FK__Message__Channel__5DCAEF64", "Channel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Channel> ChannelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Channel>("eNegModel.FK__Message__Channel__5DCAEF64", "Channel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Channel>("eNegModel.FK__Message__Channel__5DCAEF64", "Channel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Message__Convers__5CD6CB2B", "Conversation")]
        public Conversation Conversation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conversation>("eNegModel.FK__Message__Convers__5CD6CB2B", "Conversation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conversation>("eNegModel.FK__Message__Convers__5CD6CB2B", "Conversation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Conversation> ConversationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Conversation>("eNegModel.FK__Message__Convers__5CD6CB2B", "Conversation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Conversation>("eNegModel.FK__Message__Convers__5CD6CB2B", "Conversation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Message__Deleted__5EBF139D", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__Message__Deleted__5EBF139D", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__Message__Deleted__5EBF139D", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__Message__Deleted__5EBF139D", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("eNegModel.FK__Message__Deleted__5EBF139D", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="Negotiation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Negotiation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Negotiation object.
        /// </summary>
        /// <param name="negotiationID">Initial value of the NegotiationID property.</param>
        /// <param name="negotiationName">Initial value of the NegotiationName property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static Negotiation CreateNegotiation(global::System.Guid negotiationID, global::System.String negotiationName, global::System.DateTime createdDate, global::System.Guid userID)
        {
            Negotiation negotiation = new Negotiation();
            negotiation.NegotiationID = negotiationID;
            negotiation.NegotiationName = negotiationName;
            negotiation.CreatedDate = createdDate;
            negotiation.UserID = userID;
            return negotiation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid NegotiationID
        {
            get
            {
                return _NegotiationID;
            }
            set
            {
                if (_NegotiationID != value)
                {
                    OnNegotiationIDChanging(value);
                    ReportPropertyChanging("NegotiationID");
                    _NegotiationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NegotiationID");
                    OnNegotiationIDChanged();
                }
            }
        }
        private global::System.Guid _NegotiationID;
        partial void OnNegotiationIDChanging(global::System.Guid value);
        partial void OnNegotiationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NegotiationName
        {
            get
            {
                return _NegotiationName;
            }
            set
            {
                OnNegotiationNameChanging(value);
                ReportPropertyChanging("NegotiationName");
                _NegotiationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NegotiationName");
                OnNegotiationNameChanged();
            }
        }
        private global::System.String _NegotiationName;
        partial void OnNegotiationNameChanging(global::System.String value);
        partial void OnNegotiationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                OnStatusIDChanging(value);
                ReportPropertyChanging("StatusID");
                _StatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusID");
                OnStatusIDChanged();
            }
        }
        private Nullable<global::System.Guid> _StatusID;
        partial void OnStatusIDChanging(Nullable<global::System.Guid> value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedDate
        {
            get
            {
                return _DeletedDate;
            }
            set
            {
                OnDeletedDateChanging(value);
                ReportPropertyChanging("DeletedDate");
                _DeletedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedDate");
                OnDeletedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedDate;
        partial void OnDeletedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Conversat__Negot__5DCAEF64", "Conversation")]
        public EntityCollection<Conversation> Conversations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Conversation>("eNegModel.FK__Conversat__Negot__5DCAEF64", "Conversation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Conversation>("eNegModel.FK__Conversat__Negot__5DCAEF64", "Conversation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Negotiati__Negot__66603565", "NegotiationApplicationStatu")]
        public EntityCollection<NegotiationApplicationStatu> NegotiationApplicationStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NegotiationApplicationStatu>("eNegModel.FK__Negotiati__Negot__66603565", "NegotiationApplicationStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NegotiationApplicationStatu>("eNegModel.FK__Negotiati__Negot__66603565", "NegotiationApplicationStatu", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Negotiati__Statu__6477ECF3", "NegotiationStatu")]
        public NegotiationStatu NegotiationStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NegotiationStatu>("eNegModel.FK__Negotiati__Statu__6477ECF3", "NegotiationStatu").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NegotiationStatu>("eNegModel.FK__Negotiati__Statu__6477ECF3", "NegotiationStatu").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NegotiationStatu> NegotiationStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NegotiationStatu>("eNegModel.FK__Negotiati__Statu__6477ECF3", "NegotiationStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NegotiationStatu>("eNegModel.FK__Negotiati__Statu__6477ECF3", "NegotiationStatu", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK_NegotiationOrganization_Negotiation", "NegotiationOrganization")]
        public EntityCollection<NegotiationOrganization> NegotiationOrganizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NegotiationOrganization>("eNegModel.FK_NegotiationOrganization_Negotiation", "NegotiationOrganization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NegotiationOrganization>("eNegModel.FK_NegotiationOrganization_Negotiation", "NegotiationOrganization", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="NegotiationApplicationStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NegotiationApplicationStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NegotiationApplicationStatu object.
        /// </summary>
        /// <param name="negotiationApplicationStatusID">Initial value of the NegotiationApplicationStatusID property.</param>
        /// <param name="applicationID">Initial value of the ApplicationID property.</param>
        /// <param name="negotiationID">Initial value of the NegotiationID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static NegotiationApplicationStatu CreateNegotiationApplicationStatu(global::System.Guid negotiationApplicationStatusID, global::System.Guid applicationID, global::System.Guid negotiationID, global::System.Guid userID, global::System.Boolean active)
        {
            NegotiationApplicationStatu negotiationApplicationStatu = new NegotiationApplicationStatu();
            negotiationApplicationStatu.NegotiationApplicationStatusID = negotiationApplicationStatusID;
            negotiationApplicationStatu.ApplicationID = applicationID;
            negotiationApplicationStatu.NegotiationID = negotiationID;
            negotiationApplicationStatu.UserID = userID;
            negotiationApplicationStatu.Active = active;
            return negotiationApplicationStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid NegotiationApplicationStatusID
        {
            get
            {
                return _NegotiationApplicationStatusID;
            }
            set
            {
                if (_NegotiationApplicationStatusID != value)
                {
                    OnNegotiationApplicationStatusIDChanging(value);
                    ReportPropertyChanging("NegotiationApplicationStatusID");
                    _NegotiationApplicationStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NegotiationApplicationStatusID");
                    OnNegotiationApplicationStatusIDChanged();
                }
            }
        }
        private global::System.Guid _NegotiationApplicationStatusID;
        partial void OnNegotiationApplicationStatusIDChanging(global::System.Guid value);
        partial void OnNegotiationApplicationStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationID
        {
            get
            {
                return _ApplicationID;
            }
            set
            {
                OnApplicationIDChanging(value);
                ReportPropertyChanging("ApplicationID");
                _ApplicationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationID");
                OnApplicationIDChanged();
            }
        }
        private global::System.Guid _ApplicationID;
        partial void OnApplicationIDChanging(global::System.Guid value);
        partial void OnApplicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid NegotiationID
        {
            get
            {
                return _NegotiationID;
            }
            set
            {
                OnNegotiationIDChanging(value);
                ReportPropertyChanging("NegotiationID");
                _NegotiationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NegotiationID");
                OnNegotiationIDChanged();
            }
        }
        private global::System.Guid _NegotiationID;
        partial void OnNegotiationIDChanging(global::System.Guid value);
        partial void OnNegotiationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Negotiati__Appli__656C112C", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("eNegModel.FK__Negotiati__Appli__656C112C", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("eNegModel.FK__Negotiati__Appli__656C112C", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("eNegModel.FK__Negotiati__Appli__656C112C", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("eNegModel.FK__Negotiati__Appli__656C112C", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Negotiati__Negot__66603565", "Negotiation")]
        public Negotiation Negotiation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Negotiation>("eNegModel.FK__Negotiati__Negot__66603565", "Negotiation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Negotiation>("eNegModel.FK__Negotiati__Negot__66603565", "Negotiation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Negotiation> NegotiationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Negotiation>("eNegModel.FK__Negotiati__Negot__66603565", "Negotiation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Negotiation>("eNegModel.FK__Negotiati__Negot__66603565", "Negotiation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Negotiati__UserI__6754599E", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__Negotiati__UserI__6754599E", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__Negotiati__UserI__6754599E", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__Negotiati__UserI__6754599E", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("eNegModel.FK__Negotiati__UserI__6754599E", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="NegotiationOrganization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NegotiationOrganization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NegotiationOrganization object.
        /// </summary>
        /// <param name="negotiationOrganizationID">Initial value of the NegotiationOrganizationID property.</param>
        /// <param name="negotiationID">Initial value of the NegotiationID property.</param>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static NegotiationOrganization CreateNegotiationOrganization(global::System.Guid negotiationOrganizationID, global::System.Guid negotiationID, global::System.Guid organizationID, global::System.Boolean deleted)
        {
            NegotiationOrganization negotiationOrganization = new NegotiationOrganization();
            negotiationOrganization.NegotiationOrganizationID = negotiationOrganizationID;
            negotiationOrganization.NegotiationID = negotiationID;
            negotiationOrganization.OrganizationID = organizationID;
            negotiationOrganization.Deleted = deleted;
            return negotiationOrganization;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid NegotiationOrganizationID
        {
            get
            {
                return _NegotiationOrganizationID;
            }
            set
            {
                if (_NegotiationOrganizationID != value)
                {
                    OnNegotiationOrganizationIDChanging(value);
                    ReportPropertyChanging("NegotiationOrganizationID");
                    _NegotiationOrganizationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NegotiationOrganizationID");
                    OnNegotiationOrganizationIDChanged();
                }
            }
        }
        private global::System.Guid _NegotiationOrganizationID;
        partial void OnNegotiationOrganizationIDChanging(global::System.Guid value);
        partial void OnNegotiationOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid NegotiationID
        {
            get
            {
                return _NegotiationID;
            }
            set
            {
                OnNegotiationIDChanging(value);
                ReportPropertyChanging("NegotiationID");
                _NegotiationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NegotiationID");
                OnNegotiationIDChanged();
            }
        }
        private global::System.Guid _NegotiationID;
        partial void OnNegotiationIDChanging(global::System.Guid value);
        partial void OnNegotiationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.Guid _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Guid value);
        partial void OnOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _DeletedBy;
        partial void OnDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK_NegotiationOrganization_Negotiation", "Negotiation")]
        public Negotiation Negotiation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Negotiation>("eNegModel.FK_NegotiationOrganization_Negotiation", "Negotiation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Negotiation>("eNegModel.FK_NegotiationOrganization_Negotiation", "Negotiation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Negotiation> NegotiationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Negotiation>("eNegModel.FK_NegotiationOrganization_Negotiation", "Negotiation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Negotiation>("eNegModel.FK_NegotiationOrganization_Negotiation", "Negotiation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK_NegotiationOrganization_Organization", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("eNegModel.FK_NegotiationOrganization_Organization", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("eNegModel.FK_NegotiationOrganization_Organization", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("eNegModel.FK_NegotiationOrganization_Organization", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("eNegModel.FK_NegotiationOrganization_Organization", "Organization", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="NegotiationStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NegotiationStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NegotiationStatu object.
        /// </summary>
        /// <param name="statusID">Initial value of the StatusID property.</param>
        /// <param name="statusDescription">Initial value of the StatusDescription property.</param>
        public static NegotiationStatu CreateNegotiationStatu(global::System.Guid statusID, global::System.String statusDescription)
        {
            NegotiationStatu negotiationStatu = new NegotiationStatu();
            negotiationStatu.StatusID = statusID;
            negotiationStatu.StatusDescription = statusDescription;
            return negotiationStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                if (_StatusID != value)
                {
                    OnStatusIDChanging(value);
                    ReportPropertyChanging("StatusID");
                    _StatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StatusID");
                    OnStatusIDChanged();
                }
            }
        }
        private global::System.Guid _StatusID;
        partial void OnStatusIDChanging(global::System.Guid value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StatusDescription
        {
            get
            {
                return _StatusDescription;
            }
            set
            {
                OnStatusDescriptionChanging(value);
                ReportPropertyChanging("StatusDescription");
                _StatusDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StatusDescription");
                OnStatusDescriptionChanged();
            }
        }
        private global::System.String _StatusDescription;
        partial void OnStatusDescriptionChanging(global::System.String value);
        partial void OnStatusDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Negotiati__Statu__6477ECF3", "Negotiation")]
        public EntityCollection<Negotiation> Negotiations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Negotiation>("eNegModel.FK__Negotiati__Statu__6477ECF3", "Negotiation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Negotiation>("eNegModel.FK__Negotiati__Statu__6477ECF3", "Negotiation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="Organization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Organization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Organization object.
        /// </summary>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        /// <param name="organizationName">Initial value of the OrganizationName property.</param>
        /// <param name="organizationTypeID">Initial value of the OrganizationTypeID property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static Organization CreateOrganization(global::System.Guid organizationID, global::System.String organizationName, global::System.Int32 organizationTypeID, global::System.Boolean deleted)
        {
            Organization organization = new Organization();
            organization.OrganizationID = organizationID;
            organization.OrganizationName = organizationName;
            organization.OrganizationTypeID = organizationTypeID;
            organization.Deleted = deleted;
            return organization;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                if (_OrganizationID != value)
                {
                    OnOrganizationIDChanging(value);
                    ReportPropertyChanging("OrganizationID");
                    _OrganizationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrganizationID");
                    OnOrganizationIDChanged();
                }
            }
        }
        private global::System.Guid _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Guid value);
        partial void OnOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrganizationName
        {
            get
            {
                return _OrganizationName;
            }
            set
            {
                OnOrganizationNameChanging(value);
                ReportPropertyChanging("OrganizationName");
                _OrganizationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OrganizationName");
                OnOrganizationNameChanged();
            }
        }
        private global::System.String _OrganizationName;
        partial void OnOrganizationNameChanging(global::System.String value);
        partial void OnOrganizationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrganizationTypeID
        {
            get
            {
                return _OrganizationTypeID;
            }
            set
            {
                OnOrganizationTypeIDChanging(value);
                ReportPropertyChanging("OrganizationTypeID");
                _OrganizationTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganizationTypeID");
                OnOrganizationTypeIDChanged();
            }
        }
        private global::System.Int32 _OrganizationTypeID;
        partial void OnOrganizationTypeIDChanging(global::System.Int32 value);
        partial void OnOrganizationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _DeletedBy;
        partial void OnDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK_NegotiationOrganization_Organization", "NegotiationOrganization")]
        public EntityCollection<NegotiationOrganization> NegotiationOrganizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NegotiationOrganization>("eNegModel.FK_NegotiationOrganization_Organization", "NegotiationOrganization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NegotiationOrganization>("eNegModel.FK_NegotiationOrganization_Organization", "NegotiationOrganization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK_Organization_OrganizationType", "OrganizationType")]
        public OrganizationType OrganizationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("eNegModel.FK_Organization_OrganizationType", "OrganizationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("eNegModel.FK_Organization_OrganizationType", "OrganizationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrganizationType> OrganizationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("eNegModel.FK_Organization_OrganizationType", "OrganizationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrganizationType>("eNegModel.FK_Organization_OrganizationType", "OrganizationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK_UserOrganization_Organization", "UserOrganization")]
        public EntityCollection<UserOrganization> UserOrganizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserOrganization>("eNegModel.FK_UserOrganization_Organization", "UserOrganization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserOrganization>("eNegModel.FK_UserOrganization_Organization", "UserOrganization", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="OrganizationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrganizationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrganizationType object.
        /// </summary>
        /// <param name="organizationTypeID">Initial value of the OrganizationTypeID property.</param>
        /// <param name="organizationTypeName">Initial value of the OrganizationTypeName property.</param>
        public static OrganizationType CreateOrganizationType(global::System.Int32 organizationTypeID, global::System.String organizationTypeName)
        {
            OrganizationType organizationType = new OrganizationType();
            organizationType.OrganizationTypeID = organizationTypeID;
            organizationType.OrganizationTypeName = organizationTypeName;
            return organizationType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrganizationTypeID
        {
            get
            {
                return _OrganizationTypeID;
            }
            set
            {
                if (_OrganizationTypeID != value)
                {
                    OnOrganizationTypeIDChanging(value);
                    ReportPropertyChanging("OrganizationTypeID");
                    _OrganizationTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrganizationTypeID");
                    OnOrganizationTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _OrganizationTypeID;
        partial void OnOrganizationTypeIDChanging(global::System.Int32 value);
        partial void OnOrganizationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrganizationTypeName
        {
            get
            {
                return _OrganizationTypeName;
            }
            set
            {
                OnOrganizationTypeNameChanging(value);
                ReportPropertyChanging("OrganizationTypeName");
                _OrganizationTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OrganizationTypeName");
                OnOrganizationTypeNameChanged();
            }
        }
        private global::System.String _OrganizationTypeName;
        partial void OnOrganizationTypeNameChanging(global::System.String value);
        partial void OnOrganizationTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK_Organization_OrganizationType", "Organization")]
        public EntityCollection<Organization> Organizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Organization>("eNegModel.FK_Organization_OrganizationType", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Organization>("eNegModel.FK_Organization_OrganizationType", "Organization", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="PreferedLanguage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PreferedLanguage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PreferedLanguage object.
        /// </summary>
        /// <param name="lCID">Initial value of the LCID property.</param>
        public static PreferedLanguage CreatePreferedLanguage(global::System.Int32 lCID)
        {
            PreferedLanguage preferedLanguage = new PreferedLanguage();
            preferedLanguage.LCID = lCID;
            return preferedLanguage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LCID
        {
            get
            {
                return _LCID;
            }
            set
            {
                if (_LCID != value)
                {
                    OnLCIDChanging(value);
                    ReportPropertyChanging("LCID");
                    _LCID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LCID");
                    OnLCIDChanged();
                }
            }
        }
        private global::System.Int32 _LCID;
        partial void OnLCIDChanging(global::System.Int32 value);
        partial void OnLCIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreferedLanguage1
        {
            get
            {
                return _PreferedLanguage1;
            }
            set
            {
                OnPreferedLanguage1Changing(value);
                ReportPropertyChanging("PreferedLanguage1");
                _PreferedLanguage1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PreferedLanguage1");
                OnPreferedLanguage1Changed();
            }
        }
        private global::System.String _PreferedLanguage1;
        partial void OnPreferedLanguage1Changing(global::System.String value);
        partial void OnPreferedLanguage1Changed();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__User__LCID__51300E55", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("eNegModel.FK__User__LCID__51300E55", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("eNegModel.FK__User__LCID__51300E55", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="Profile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Profile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Profile object.
        /// </summary>
        /// <param name="profileID">Initial value of the ProfileID property.</param>
        /// <param name="currentTheme">Initial value of the CurrentTheme property.</param>
        public static Profile CreateProfile(global::System.Guid profileID, global::System.String currentTheme)
        {
            Profile profile = new Profile();
            profile.ProfileID = profileID;
            profile.CurrentTheme = currentTheme;
            return profile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ProfileID
        {
            get
            {
                return _ProfileID;
            }
            set
            {
                if (_ProfileID != value)
                {
                    OnProfileIDChanging(value);
                    ReportPropertyChanging("ProfileID");
                    _ProfileID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProfileID");
                    OnProfileIDChanged();
                }
            }
        }
        private global::System.Guid _ProfileID;
        partial void OnProfileIDChanging(global::System.Guid value);
        partial void OnProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrentTheme
        {
            get
            {
                return _CurrentTheme;
            }
            set
            {
                OnCurrentThemeChanging(value);
                ReportPropertyChanging("CurrentTheme");
                _CurrentTheme = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CurrentTheme");
                OnCurrentThemeChanged();
            }
        }
        private global::System.String _CurrentTheme;
        partial void OnCurrentThemeChanging(global::System.String value);
        partial void OnCurrentThemeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Guid> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Guid> value);
        partial void OnUserIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Profile__UserID__68487DD7", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__Profile__UserID__68487DD7", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__Profile__UserID__68487DD7", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__Profile__UserID__68487DD7", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("eNegModel.FK__Profile__UserID__68487DD7", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="Right")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Right : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Right object.
        /// </summary>
        /// <param name="rightID">Initial value of the RightID property.</param>
        public static Right CreateRight(global::System.Guid rightID)
        {
            Right right = new Right();
            right.RightID = rightID;
            return right;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RightID
        {
            get
            {
                return _RightID;
            }
            set
            {
                if (_RightID != value)
                {
                    OnRightIDChanging(value);
                    ReportPropertyChanging("RightID");
                    _RightID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RightID");
                    OnRightIDChanged();
                }
            }
        }
        private global::System.Guid _RightID;
        partial void OnRightIDChanging(global::System.Guid value);
        partial void OnRightIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RightName
        {
            get
            {
                return _RightName;
            }
            set
            {
                OnRightNameChanging(value);
                ReportPropertyChanging("RightName");
                _RightName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RightName");
                OnRightNameChanged();
            }
        }
        private global::System.String _RightName;
        partial void OnRightNameChanging(global::System.String value);
        partial void OnRightNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RightDescription
        {
            get
            {
                return _RightDescription;
            }
            set
            {
                OnRightDescriptionChanging(value);
                ReportPropertyChanging("RightDescription");
                _RightDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RightDescription");
                OnRightDescriptionChanged();
            }
        }
        private global::System.String _RightDescription;
        partial void OnRightDescriptionChanging(global::System.String value);
        partial void OnRightDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__RoleRight__Right__693CA210", "RoleRight")]
        public EntityCollection<RoleRight> RoleRight
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoleRight>("eNegModel.FK__RoleRight__Right__693CA210", "RoleRight");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoleRight>("eNegModel.FK__RoleRight__Right__693CA210", "RoleRight", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="roleDescription">Initial value of the RoleDescription property.</param>
        public static Role CreateRole(global::System.Guid roleID, global::System.String roleName, global::System.String roleDescription)
        {
            Role role = new Role();
            role.RoleID = roleID;
            role.RoleName = roleName;
            role.RoleDescription = roleDescription;
            return role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Guid _RoleID;
        partial void OnRoleIDChanging(global::System.Guid value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleDescription
        {
            get
            {
                return _RoleDescription;
            }
            set
            {
                OnRoleDescriptionChanging(value);
                ReportPropertyChanging("RoleDescription");
                _RoleDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleDescription");
                OnRoleDescriptionChanged();
            }
        }
        private global::System.String _RoleDescription;
        partial void OnRoleDescriptionChanging(global::System.String value);
        partial void OnRoleDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__RoleRight__RoleI__6A30C649", "RoleRight")]
        public EntityCollection<RoleRight> RoleRight
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoleRight>("eNegModel.FK__RoleRight__RoleI__6A30C649", "RoleRight");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoleRight>("eNegModel.FK__RoleRight__RoleI__6A30C649", "RoleRight", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__UserRole__RoleID__6FE99F9F", "UserRole")]
        public EntityCollection<UserRole> UserRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRole>("eNegModel.FK__UserRole__RoleID__6FE99F9F", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRole>("eNegModel.FK__UserRole__RoleID__6FE99F9F", "UserRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="RoleRight")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RoleRight : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RoleRight object.
        /// </summary>
        /// <param name="roleRightID">Initial value of the RoleRightID property.</param>
        public static RoleRight CreateRoleRight(global::System.Guid roleRightID)
        {
            RoleRight roleRight = new RoleRight();
            roleRight.RoleRightID = roleRightID;
            return roleRight;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleRightID
        {
            get
            {
                return _RoleRightID;
            }
            set
            {
                if (_RoleRightID != value)
                {
                    OnRoleRightIDChanging(value);
                    ReportPropertyChanging("RoleRightID");
                    _RoleRightID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleRightID");
                    OnRoleRightIDChanged();
                }
            }
        }
        private global::System.Guid _RoleRightID;
        partial void OnRoleRightIDChanging(global::System.Guid value);
        partial void OnRoleRightIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> RightID
        {
            get
            {
                return _RightID;
            }
            set
            {
                OnRightIDChanging(value);
                ReportPropertyChanging("RightID");
                _RightID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RightID");
                OnRightIDChanged();
            }
        }
        private Nullable<global::System.Guid> _RightID;
        partial void OnRightIDChanging(Nullable<global::System.Guid> value);
        partial void OnRightIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private Nullable<global::System.Guid> _RoleID;
        partial void OnRoleIDChanging(Nullable<global::System.Guid> value);
        partial void OnRoleIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__RoleRight__Right__693CA210", "Right")]
        public Right Right
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Right>("eNegModel.FK__RoleRight__Right__693CA210", "Right").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Right>("eNegModel.FK__RoleRight__Right__693CA210", "Right").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Right> RightReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Right>("eNegModel.FK__RoleRight__Right__693CA210", "Right");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Right>("eNegModel.FK__RoleRight__Right__693CA210", "Right", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__RoleRight__RoleI__6A30C649", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("eNegModel.FK__RoleRight__RoleI__6A30C649", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("eNegModel.FK__RoleRight__RoleI__6A30C649", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("eNegModel.FK__RoleRight__RoleI__6A30C649", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("eNegModel.FK__RoleRight__RoleI__6A30C649", "Role", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="SecurityQuestion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SecurityQuestion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SecurityQuestion object.
        /// </summary>
        /// <param name="securityQuestionID">Initial value of the SecurityQuestionID property.</param>
        /// <param name="question">Initial value of the Question property.</param>
        public static SecurityQuestion CreateSecurityQuestion(global::System.Guid securityQuestionID, global::System.String question)
        {
            SecurityQuestion securityQuestion = new SecurityQuestion();
            securityQuestion.SecurityQuestionID = securityQuestionID;
            securityQuestion.Question = question;
            return securityQuestion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SecurityQuestionID
        {
            get
            {
                return _SecurityQuestionID;
            }
            set
            {
                if (_SecurityQuestionID != value)
                {
                    OnSecurityQuestionIDChanging(value);
                    ReportPropertyChanging("SecurityQuestionID");
                    _SecurityQuestionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SecurityQuestionID");
                    OnSecurityQuestionIDChanged();
                }
            }
        }
        private global::System.Guid _SecurityQuestionID;
        partial void OnSecurityQuestionIDChanging(global::System.Guid value);
        partial void OnSecurityQuestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Question
        {
            get
            {
                return _Question;
            }
            set
            {
                OnQuestionChanging(value);
                ReportPropertyChanging("Question");
                _Question = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Question");
                OnQuestionChanged();
            }
        }
        private global::System.String _Question;
        partial void OnQuestionChanging(global::System.String value);
        partial void OnQuestionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__User__SecurityQu__503BEA1C", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("eNegModel.FK__User__SecurityQu__503BEA1C", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("eNegModel.FK__User__SecurityQu__503BEA1C", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="emailAddress">Initial value of the EmailAddress property.</param>
        /// <param name="passwordHash">Initial value of the PasswordHash property.</param>
        /// <param name="passwordSalt">Initial value of the PasswordSalt property.</param>
        /// <param name="locked">Initial value of the Locked property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="iPAddress">Initial value of the IPAddress property.</param>
        /// <param name="online">Initial value of the Online property.</param>
        /// <param name="disabled">Initial value of the Disabled property.</param>
        public static User CreateUser(global::System.Guid userID, global::System.String emailAddress, global::System.String passwordHash, global::System.String passwordSalt, global::System.Boolean locked, global::System.DateTime createDate, global::System.String iPAddress, global::System.Boolean online, global::System.Boolean disabled)
        {
            User user = new User();
            user.UserID = userID;
            user.EmailAddress = emailAddress;
            user.PasswordHash = passwordHash;
            user.PasswordSalt = passwordSalt;
            user.Locked = locked;
            user.CreateDate = createDate;
            user.IPAddress = iPAddress;
            user.Online = online;
            user.Disabled = disabled;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordHash
        {
            get
            {
                return _PasswordHash;
            }
            set
            {
                OnPasswordHashChanging(value);
                ReportPropertyChanging("PasswordHash");
                _PasswordHash = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordHash");
                OnPasswordHashChanged();
            }
        }
        private global::System.String _PasswordHash;
        partial void OnPasswordHashChanging(global::System.String value);
        partial void OnPasswordHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Locked
        {
            get
            {
                return _Locked;
            }
            set
            {
                OnLockedChanging(value);
                ReportPropertyChanging("Locked");
                _Locked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Locked");
                OnLockedChanged();
            }
        }
        private global::System.Boolean _Locked;
        partial void OnLockedChanging(global::System.Boolean value);
        partial void OnLockedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LockedDate
        {
            get
            {
                return _LockedDate;
            }
            set
            {
                OnLockedDateChanging(value);
                ReportPropertyChanging("LockedDate");
                _LockedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LockedDate");
                OnLockedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LockedDate;
        partial void OnLockedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLockedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastLoginDate;
        partial void OnLastLoginDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> AccountTypeID
        {
            get
            {
                return _AccountTypeID;
            }
            set
            {
                OnAccountTypeIDChanging(value);
                ReportPropertyChanging("AccountTypeID");
                _AccountTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountTypeID");
                OnAccountTypeIDChanged();
            }
        }
        private Nullable<global::System.Guid> _AccountTypeID;
        partial void OnAccountTypeIDChanging(Nullable<global::System.Guid> value);
        partial void OnAccountTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IPAddress
        {
            get
            {
                return _IPAddress;
            }
            set
            {
                OnIPAddressChanging(value);
                ReportPropertyChanging("IPAddress");
                _IPAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IPAddress");
                OnIPAddressChanged();
            }
        }
        private global::System.String _IPAddress;
        partial void OnIPAddressChanging(global::System.String value);
        partial void OnIPAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> SecurityQuestionID
        {
            get
            {
                return _SecurityQuestionID;
            }
            set
            {
                OnSecurityQuestionIDChanging(value);
                ReportPropertyChanging("SecurityQuestionID");
                _SecurityQuestionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityQuestionID");
                OnSecurityQuestionIDChanged();
            }
        }
        private Nullable<global::System.Guid> _SecurityQuestionID;
        partial void OnSecurityQuestionIDChanging(Nullable<global::System.Guid> value);
        partial void OnSecurityQuestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AnswerHash
        {
            get
            {
                return _AnswerHash;
            }
            set
            {
                OnAnswerHashChanging(value);
                ReportPropertyChanging("AnswerHash");
                _AnswerHash = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AnswerHash");
                OnAnswerHashChanged();
            }
        }
        private global::System.String _AnswerHash;
        partial void OnAnswerHashChanging(global::System.String value);
        partial void OnAnswerHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AnswerSalt
        {
            get
            {
                return _AnswerSalt;
            }
            set
            {
                OnAnswerSaltChanging(value);
                ReportPropertyChanging("AnswerSalt");
                _AnswerSalt = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AnswerSalt");
                OnAnswerSaltChanged();
            }
        }
        private global::System.String _AnswerSalt;
        partial void OnAnswerSaltChanging(global::System.String value);
        partial void OnAnswerSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Online
        {
            get
            {
                return _Online;
            }
            set
            {
                OnOnlineChanging(value);
                ReportPropertyChanging("Online");
                _Online = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Online");
                OnOnlineChanged();
            }
        }
        private global::System.Boolean _Online;
        partial void OnOnlineChanging(global::System.Boolean value);
        partial void OnOnlineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Disabled
        {
            get
            {
                return _Disabled;
            }
            set
            {
                OnDisabledChanging(value);
                ReportPropertyChanging("Disabled");
                _Disabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Disabled");
                OnDisabledChanged();
            }
        }
        private global::System.Boolean _Disabled;
        partial void OnDisabledChanging(global::System.Boolean value);
        partial void OnDisabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LCID
        {
            get
            {
                return _LCID;
            }
            set
            {
                OnLCIDChanging(value);
                ReportPropertyChanging("LCID");
                _LCID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LCID");
                OnLCIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LCID;
        partial void OnLCIDChanging(Nullable<global::System.Int32> value);
        partial void OnLCIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private Nullable<global::System.Guid> _CountryID;
        partial void OnCountryIDChanging(Nullable<global::System.Guid> value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mobile
        {
            get
            {
                return _Mobile;
            }
            set
            {
                OnMobileChanging(value);
                ReportPropertyChanging("Mobile");
                _Mobile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Mobile");
                OnMobileChanged();
            }
        }
        private global::System.String _Mobile;
        partial void OnMobileChanging(global::System.String value);
        partial void OnMobileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private Nullable<global::System.Boolean> _Gender;
        partial void OnGenderChanging(Nullable<global::System.Boolean> value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Reset
        {
            get
            {
                return _Reset;
            }
            set
            {
                OnResetChanging(value);
                ReportPropertyChanging("Reset");
                _Reset = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Reset");
                OnResetChanged();
            }
        }
        private Nullable<global::System.Boolean> _Reset;
        partial void OnResetChanging(Nullable<global::System.Boolean> value);
        partial void OnResetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CultureID
        {
            get
            {
                return _CultureID;
            }
            set
            {
                OnCultureIDChanging(value);
                ReportPropertyChanging("CultureID");
                _CultureID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CultureID");
                OnCultureIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CultureID;
        partial void OnCultureIDChanging(Nullable<global::System.Int32> value);
        partial void OnCultureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HasPublicProfile
        {
            get
            {
                return _HasPublicProfile;
            }
            set
            {
                OnHasPublicProfileChanging(value);
                ReportPropertyChanging("HasPublicProfile");
                _HasPublicProfile = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasPublicProfile");
                OnHasPublicProfileChanged();
            }
        }
        private Nullable<global::System.Boolean> _HasPublicProfile;
        partial void OnHasPublicProfileChanging(Nullable<global::System.Boolean> value);
        partial void OnHasPublicProfileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProfileDescription
        {
            get
            {
                return _ProfileDescription;
            }
            set
            {
                OnProfileDescriptionChanging(value);
                ReportPropertyChanging("ProfileDescription");
                _ProfileDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProfileDescription");
                OnProfileDescriptionChanged();
            }
        }
        private global::System.String _ProfileDescription;
        partial void OnProfileDescriptionChanging(global::System.String value);
        partial void OnProfileDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__User__CountryID__5224328E", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("eNegModel.FK__User__CountryID__5224328E", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("eNegModel.FK__User__CountryID__5224328E", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("eNegModel.FK__User__CountryID__5224328E", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("eNegModel.FK__User__CountryID__5224328E", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__User__LCID__51300E55", "PreferedLanguage")]
        public PreferedLanguage PreferedLanguage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PreferedLanguage>("eNegModel.FK__User__LCID__51300E55", "PreferedLanguage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PreferedLanguage>("eNegModel.FK__User__LCID__51300E55", "PreferedLanguage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PreferedLanguage> PreferedLanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PreferedLanguage>("eNegModel.FK__User__LCID__51300E55", "PreferedLanguage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PreferedLanguage>("eNegModel.FK__User__LCID__51300E55", "PreferedLanguage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Profile__UserID__68487DD7", "Profile")]
        public EntityCollection<Profile> Profile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Profile>("eNegModel.FK__Profile__UserID__68487DD7", "Profile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Profile>("eNegModel.FK__Profile__UserID__68487DD7", "Profile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__User__SecurityQu__503BEA1C", "SecurityQuestion")]
        public SecurityQuestion SecurityQuestion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityQuestion>("eNegModel.FK__User__SecurityQu__503BEA1C", "SecurityQuestion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityQuestion>("eNegModel.FK__User__SecurityQu__503BEA1C", "SecurityQuestion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecurityQuestion> SecurityQuestionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityQuestion>("eNegModel.FK__User__SecurityQu__503BEA1C", "SecurityQuestion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecurityQuestion>("eNegModel.FK__User__SecurityQu__503BEA1C", "SecurityQuestion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__UserRole__UserID__6EF57B66", "UserRole")]
        public EntityCollection<UserRole> UserRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRole>("eNegModel.FK__UserRole__UserID__6EF57B66", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRole>("eNegModel.FK__UserRole__UserID__6EF57B66", "UserRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__User__AccountTyp__4F47C5E3", "AccountType")]
        public AccountType AccountType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountType>("eNegModel.FK__User__AccountTyp__4F47C5E3", "AccountType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountType>("eNegModel.FK__User__AccountTyp__4F47C5E3", "AccountType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccountType> AccountTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountType>("eNegModel.FK__User__AccountTyp__4F47C5E3", "AccountType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccountType>("eNegModel.FK__User__AccountTyp__4F47C5E3", "AccountType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Conversat__Delet__5EBF139D", "Conversation")]
        public EntityCollection<Conversation> Conversations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Conversation>("eNegModel.FK__Conversat__Delet__5EBF139D", "Conversation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Conversation>("eNegModel.FK__Conversat__Delet__5EBF139D", "Conversation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Negotiati__UserI__6754599E", "NegotiationApplicationStatu")]
        public EntityCollection<NegotiationApplicationStatu> NegotiationApplicationStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NegotiationApplicationStatu>("eNegModel.FK__Negotiati__UserI__6754599E", "NegotiationApplicationStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NegotiationApplicationStatu>("eNegModel.FK__Negotiati__UserI__6754599E", "NegotiationApplicationStatu", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__History__UserID__60A75C0F", "History")]
        public EntityCollection<History> Histories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<History>("eNegModel.FK__History__UserID__60A75C0F", "History");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<History>("eNegModel.FK__History__UserID__60A75C0F", "History", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__Message__Deleted__5EBF139D", "Message")]
        public EntityCollection<Message> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("eNegModel.FK__Message__Deleted__5EBF139D", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("eNegModel.FK__Message__Deleted__5EBF139D", "Message", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__UserAppli__UserI__55F4C372", "UserApplicationStatu")]
        public EntityCollection<UserApplicationStatu> UserApplicationStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserApplicationStatu>("eNegModel.FK__UserAppli__UserI__55F4C372", "UserApplicationStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserApplicationStatu>("eNegModel.FK__UserAppli__UserI__55F4C372", "UserApplicationStatu", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK_User_Culture", "Culture")]
        public Culture Culture
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Culture>("eNegModel.FK_User_Culture", "Culture").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Culture>("eNegModel.FK_User_Culture", "Culture").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Culture> CultureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Culture>("eNegModel.FK_User_Culture", "Culture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Culture>("eNegModel.FK_User_Culture", "Culture", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK_UserOrganization_User", "UserOrganization")]
        public EntityCollection<UserOrganization> UserOrganizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserOrganization>("eNegModel.FK_UserOrganization_User", "UserOrganization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserOrganization>("eNegModel.FK_UserOrganization_User", "UserOrganization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK_UserOperation_User", "UserOperation")]
        public EntityCollection<UserOperation> UserOperations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserOperation>("eNegModel.FK_UserOperation_User", "UserOperation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserOperation>("eNegModel.FK_UserOperation_User", "UserOperation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="UserApplicationStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserApplicationStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserApplicationStatu object.
        /// </summary>
        /// <param name="userAppStatusID">Initial value of the UserAppStatusID property.</param>
        /// <param name="applicationID">Initial value of the ApplicationID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static UserApplicationStatu CreateUserApplicationStatu(global::System.Guid userAppStatusID, global::System.Guid applicationID, global::System.Guid userID)
        {
            UserApplicationStatu userApplicationStatu = new UserApplicationStatu();
            userApplicationStatu.UserAppStatusID = userAppStatusID;
            userApplicationStatu.ApplicationID = applicationID;
            userApplicationStatu.UserID = userID;
            return userApplicationStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserAppStatusID
        {
            get
            {
                return _UserAppStatusID;
            }
            set
            {
                if (_UserAppStatusID != value)
                {
                    OnUserAppStatusIDChanging(value);
                    ReportPropertyChanging("UserAppStatusID");
                    _UserAppStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserAppStatusID");
                    OnUserAppStatusIDChanged();
                }
            }
        }
        private global::System.Guid _UserAppStatusID;
        partial void OnUserAppStatusIDChanging(global::System.Guid value);
        partial void OnUserAppStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationID
        {
            get
            {
                return _ApplicationID;
            }
            set
            {
                OnApplicationIDChanging(value);
                ReportPropertyChanging("ApplicationID");
                _ApplicationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationID");
                OnApplicationIDChanged();
            }
        }
        private global::System.Guid _ApplicationID;
        partial void OnApplicationIDChanging(global::System.Guid value);
        partial void OnApplicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDMActive
        {
            get
            {
                return _IsDMActive;
            }
            set
            {
                OnIsDMActiveChanging(value);
                ReportPropertyChanging("IsDMActive");
                _IsDMActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDMActive");
                OnIsDMActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDMActive;
        partial void OnIsDMActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDMActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__UserAppli__Appli__55009F39", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("eNegModel.FK__UserAppli__Appli__55009F39", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("eNegModel.FK__UserAppli__Appli__55009F39", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("eNegModel.FK__UserAppli__Appli__55009F39", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("eNegModel.FK__UserAppli__Appli__55009F39", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__UserAppli__UserI__55F4C372", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__UserAppli__UserI__55F4C372", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__UserAppli__UserI__55F4C372", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__UserAppli__UserI__55F4C372", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("eNegModel.FK__UserAppli__UserI__55F4C372", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="UserOperation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserOperation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserOperation object.
        /// </summary>
        /// <param name="operationID">Initial value of the OperationID property.</param>
        public static UserOperation CreateUserOperation(global::System.Guid operationID)
        {
            UserOperation userOperation = new UserOperation();
            userOperation.OperationID = operationID;
            return userOperation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OperationID
        {
            get
            {
                return _OperationID;
            }
            set
            {
                if (_OperationID != value)
                {
                    OnOperationIDChanging(value);
                    ReportPropertyChanging("OperationID");
                    _OperationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OperationID");
                    OnOperationIDChanged();
                }
            }
        }
        private global::System.Guid _OperationID;
        partial void OnOperationIDChanging(global::System.Guid value);
        partial void OnOperationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Guid> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Guid> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OperationString
        {
            get
            {
                return _OperationString;
            }
            set
            {
                OnOperationStringChanging(value);
                ReportPropertyChanging("OperationString");
                _OperationString = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OperationString");
                OnOperationStringChanged();
            }
        }
        private global::System.String _OperationString;
        partial void OnOperationStringChanging(global::System.String value);
        partial void OnOperationStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private Nullable<global::System.Byte> _Type;
        partial void OnTypeChanging(Nullable<global::System.Byte> value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NewEmailAddress
        {
            get
            {
                return _NewEmailAddress;
            }
            set
            {
                OnNewEmailAddressChanging(value);
                ReportPropertyChanging("NewEmailAddress");
                _NewEmailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NewEmailAddress");
                OnNewEmailAddressChanged();
            }
        }
        private global::System.String _NewEmailAddress;
        partial void OnNewEmailAddressChanging(global::System.String value);
        partial void OnNewEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> RequestUserID
        {
            get
            {
                return _RequestUserID;
            }
            set
            {
                OnRequestUserIDChanging(value);
                ReportPropertyChanging("RequestUserID");
                _RequestUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestUserID");
                OnRequestUserIDChanged();
            }
        }
        private Nullable<global::System.Guid> _RequestUserID;
        partial void OnRequestUserIDChanging(Nullable<global::System.Guid> value);
        partial void OnRequestUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private Nullable<global::System.Guid> _OrganizationID;
        partial void OnOrganizationIDChanging(Nullable<global::System.Guid> value);
        partial void OnOrganizationIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK_UserOperation_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK_UserOperation_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK_UserOperation_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK_UserOperation_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("eNegModel.FK_UserOperation_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="UserOrganization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserOrganization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserOrganization object.
        /// </summary>
        /// <param name="userOrganizationID">Initial value of the UserOrganizationID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        /// <param name="memberStatus">Initial value of the MemberStatus property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static UserOrganization CreateUserOrganization(global::System.Guid userOrganizationID, global::System.Guid userID, global::System.Guid organizationID, global::System.Byte memberStatus, global::System.Boolean deleted)
        {
            UserOrganization userOrganization = new UserOrganization();
            userOrganization.UserOrganizationID = userOrganizationID;
            userOrganization.UserID = userID;
            userOrganization.OrganizationID = organizationID;
            userOrganization.MemberStatus = memberStatus;
            userOrganization.Deleted = deleted;
            return userOrganization;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserOrganizationID
        {
            get
            {
                return _UserOrganizationID;
            }
            set
            {
                if (_UserOrganizationID != value)
                {
                    OnUserOrganizationIDChanging(value);
                    ReportPropertyChanging("UserOrganizationID");
                    _UserOrganizationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserOrganizationID");
                    OnUserOrganizationIDChanged();
                }
            }
        }
        private global::System.Guid _UserOrganizationID;
        partial void OnUserOrganizationIDChanging(global::System.Guid value);
        partial void OnUserOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.Guid _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Guid value);
        partial void OnOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte MemberStatus
        {
            get
            {
                return _MemberStatus;
            }
            set
            {
                OnMemberStatusChanging(value);
                ReportPropertyChanging("MemberStatus");
                _MemberStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberStatus");
                OnMemberStatusChanged();
            }
        }
        private global::System.Byte _MemberStatus;
        partial void OnMemberStatusChanging(global::System.Byte value);
        partial void OnMemberStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _DeletedBy;
        partial void OnDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK_UserOrganization_Organization", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("eNegModel.FK_UserOrganization_Organization", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("eNegModel.FK_UserOrganization_Organization", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("eNegModel.FK_UserOrganization_Organization", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("eNegModel.FK_UserOrganization_Organization", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK_UserOrganization_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK_UserOrganization_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK_UserOrganization_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK_UserOrganization_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("eNegModel.FK_UserOrganization_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eNegModel", Name="UserRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserRole object.
        /// </summary>
        /// <param name="userRoleID">Initial value of the UserRoleID property.</param>
        public static UserRole CreateUserRole(global::System.Guid userRoleID)
        {
            UserRole userRole = new UserRole();
            userRole.UserRoleID = userRoleID;
            return userRole;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserRoleID
        {
            get
            {
                return _UserRoleID;
            }
            set
            {
                if (_UserRoleID != value)
                {
                    OnUserRoleIDChanging(value);
                    ReportPropertyChanging("UserRoleID");
                    _UserRoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserRoleID");
                    OnUserRoleIDChanged();
                }
            }
        }
        private global::System.Guid _UserRoleID;
        partial void OnUserRoleIDChanging(global::System.Guid value);
        partial void OnUserRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Guid> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Guid> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private Nullable<global::System.Guid> _RoleID;
        partial void OnRoleIDChanging(Nullable<global::System.Guid> value);
        partial void OnRoleIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__UserRole__RoleID__6FE99F9F", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("eNegModel.FK__UserRole__RoleID__6FE99F9F", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("eNegModel.FK__UserRole__RoleID__6FE99F9F", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("eNegModel.FK__UserRole__RoleID__6FE99F9F", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("eNegModel.FK__UserRole__RoleID__6FE99F9F", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eNegModel", "FK__UserRole__UserID__6EF57B66", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__UserRole__UserID__6EF57B66", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__UserRole__UserID__6EF57B66", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("eNegModel.FK__UserRole__UserID__6EF57B66", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("eNegModel.FK__UserRole__UserID__6EF57B66", "User", value);
                }
            }
        }

        #endregion
    }

    #endregion
    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="eNegModel", Name="GetRightsByUserId_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetRightsByUserId_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RightName
        {
            get
            {
                return _RightName;
            }
            set
            {
                OnRightNameChanging(value);
                ReportPropertyChanging("RightName");
                _RightName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RightName");
                OnRightNameChanged();
            }
        }
        private global::System.String _RightName;
        partial void OnRightNameChanging(global::System.String value);
        partial void OnRightNameChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="eNegModel", Name="NegotiationArchive")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class NegotiationArchive : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NegotiationArchive object.
        /// </summary>
        /// <param name="archiveID">Initial value of the ArchiveID property.</param>
        public static NegotiationArchive CreateNegotiationArchive(global::System.Int32 archiveID)
        {
            NegotiationArchive negotiationArchive = new NegotiationArchive();
            negotiationArchive.ArchiveID = archiveID;
            return negotiationArchive;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ArchiveID
        {
            get
            {
                return _ArchiveID;
            }
            set
            {
                OnArchiveIDChanging(value);
                ReportPropertyChanging("ArchiveID");
                _ArchiveID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArchiveID");
                OnArchiveIDChanged();
            }
        }
        private global::System.Int32 _ArchiveID;
        partial void OnArchiveIDChanging(global::System.Int32 value);
        partial void OnArchiveIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ArchiveYear
        {
            get
            {
                return _ArchiveYear;
            }
            set
            {
                OnArchiveYearChanging(value);
                ReportPropertyChanging("ArchiveYear");
                _ArchiveYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArchiveYear");
                OnArchiveYearChanged();
            }
        }
        private Nullable<global::System.Int32> _ArchiveYear;
        partial void OnArchiveYearChanging(Nullable<global::System.Int32> value);
        partial void OnArchiveYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ArchiveMonth
        {
            get
            {
                return _ArchiveMonth;
            }
            set
            {
                OnArchiveMonthChanging(value);
                ReportPropertyChanging("ArchiveMonth");
                _ArchiveMonth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArchiveMonth");
                OnArchiveMonthChanged();
            }
        }
        private Nullable<global::System.Int32> _ArchiveMonth;
        partial void OnArchiveMonthChanging(Nullable<global::System.Int32> value);
        partial void OnArchiveMonthChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="eNegModel", Name="UserLeaveOrganizationResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class UserLeaveOrganizationResult : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CanLeave
        {
            get
            {
                return _CanLeave;
            }
            set
            {
                OnCanLeaveChanging(value);
                ReportPropertyChanging("CanLeave");
                _CanLeave = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanLeave");
                OnCanLeaveChanged();
            }
        }
        private Nullable<global::System.Boolean> _CanLeave;
        partial void OnCanLeaveChanging(Nullable<global::System.Boolean> value);
        partial void OnCanLeaveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OwnersCount
        {
            get
            {
                return _OwnersCount;
            }
            set
            {
                OnOwnersCountChanging(value);
                ReportPropertyChanging("OwnersCount");
                _OwnersCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnersCount");
                OnOwnersCountChanged();
            }
        }
        private Nullable<global::System.Int32> _OwnersCount;
        partial void OnOwnersCountChanging(Nullable<global::System.Int32> value);
        partial void OnOwnersCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> AlternativeOwnerID
        {
            get
            {
                return _AlternativeOwnerID;
            }
            set
            {
                OnAlternativeOwnerIDChanging(value);
                ReportPropertyChanging("AlternativeOwnerID");
                _AlternativeOwnerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlternativeOwnerID");
                OnAlternativeOwnerIDChanged();
            }
        }
        private Nullable<global::System.Guid> _AlternativeOwnerID;
        partial void OnAlternativeOwnerIDChanging(Nullable<global::System.Guid> value);
        partial void OnAlternativeOwnerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="eNegModel", Name="UserProfileStatisticalsResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class UserProfileStatisticalsResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserProfileStatisticalsResult object.
        /// </summary>
        /// <param name="statisticalName">Initial value of the StatisticalName property.</param>
        public static UserProfileStatisticalsResult CreateUserProfileStatisticalsResult(global::System.String statisticalName)
        {
            UserProfileStatisticalsResult userProfileStatisticalsResult = new UserProfileStatisticalsResult();
            userProfileStatisticalsResult.StatisticalName = statisticalName;
            return userProfileStatisticalsResult;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StatisticalName
        {
            get
            {
                return _StatisticalName;
            }
            set
            {
                OnStatisticalNameChanging(value);
                ReportPropertyChanging("StatisticalName");
                _StatisticalName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StatisticalName");
                OnStatisticalNameChanged();
            }
        }
        private global::System.String _StatisticalName;
        partial void OnStatisticalNameChanging(global::System.String value);
        partial void OnStatisticalNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> StatisticalValue
        {
            get
            {
                return _StatisticalValue;
            }
            set
            {
                OnStatisticalValueChanging(value);
                ReportPropertyChanging("StatisticalValue");
                _StatisticalValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatisticalValue");
                OnStatisticalValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _StatisticalValue;
        partial void OnStatisticalValueChanging(Nullable<global::System.Decimal> value);
        partial void OnStatisticalValueChanged();

        #endregion
    }

    #endregion
    
}
