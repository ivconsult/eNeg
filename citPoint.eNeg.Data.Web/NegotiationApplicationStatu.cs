//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace citPOINT.eNeg.Data.Web
{
    public partial class NegotiationApplicationStatu
    {
        #region Primitive Properties
    
        public virtual System.Guid NegotiationApplicationStatusID
        {
            get;
            set;
        }
    
        public virtual System.Guid ApplicationID
        {
            get { return _applicationID; }
            set
            {
                if (_applicationID != value)
                {
                    if (Application != null && Application.ApplicationID != value)
                    {
                        Application = null;
                    }
                    _applicationID = value;
                }
            }
        }
        private System.Guid _applicationID;
    
        public virtual System.Guid NegotiationID
        {
            get { return _negotiationID; }
            set
            {
                if (_negotiationID != value)
                {
                    if (Negotiation != null && Negotiation.NegotiationID != value)
                    {
                        Negotiation = null;
                    }
                    _negotiationID = value;
                }
            }
        }
        private System.Guid _negotiationID;
    
        public virtual System.Guid UserID
        {
            get { return _userID; }
            set
            {
                if (_userID != value)
                {
                    if (User != null && User.UserID != value)
                    {
                        User = null;
                    }
                    _userID = value;
                }
            }
        }
        private System.Guid _userID;
    
        public virtual bool Active
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Application Application
        {
            get { return _application; }
            set
            {
                if (!ReferenceEquals(_application, value))
                {
                    var previousValue = _application;
                    _application = value;
                    FixupApplication(previousValue);
                }
            }
        }
        private Application _application;
    
        public virtual Negotiation Negotiation
        {
            get { return _negotiation; }
            set
            {
                if (!ReferenceEquals(_negotiation, value))
                {
                    var previousValue = _negotiation;
                    _negotiation = value;
                    FixupNegotiation(previousValue);
                }
            }
        }
        private Negotiation _negotiation;
    
        public virtual User User
        {
            get { return _user; }
            set
            {
                if (!ReferenceEquals(_user, value))
                {
                    var previousValue = _user;
                    _user = value;
                    FixupUser(previousValue);
                }
            }
        }
        private User _user;

        #endregion
        #region Association Fixup
    
        private void FixupApplication(Application previousValue)
        {
            if (previousValue != null && previousValue.NegotiationApplicationStatus.Contains(this))
            {
                previousValue.NegotiationApplicationStatus.Remove(this);
            }
    
            if (Application != null)
            {
                if (!Application.NegotiationApplicationStatus.Contains(this))
                {
                    Application.NegotiationApplicationStatus.Add(this);
                }
                if (ApplicationID != Application.ApplicationID)
                {
                    ApplicationID = Application.ApplicationID;
                }
            }
        }
    
        private void FixupNegotiation(Negotiation previousValue)
        {
            if (previousValue != null && previousValue.NegotiationApplicationStatus.Contains(this))
            {
                previousValue.NegotiationApplicationStatus.Remove(this);
            }
    
            if (Negotiation != null)
            {
                if (!Negotiation.NegotiationApplicationStatus.Contains(this))
                {
                    Negotiation.NegotiationApplicationStatus.Add(this);
                }
                if (NegotiationID != Negotiation.NegotiationID)
                {
                    NegotiationID = Negotiation.NegotiationID;
                }
            }
        }
    
        private void FixupUser(User previousValue)
        {
            if (previousValue != null && previousValue.NegotiationApplicationStatus.Contains(this))
            {
                previousValue.NegotiationApplicationStatus.Remove(this);
            }
    
            if (User != null)
            {
                if (!User.NegotiationApplicationStatus.Contains(this))
                {
                    User.NegotiationApplicationStatus.Add(this);
                }
                if (UserID != User.UserID)
                {
                    UserID = User.UserID;
                }
            }
        }

        #endregion
    }
}
